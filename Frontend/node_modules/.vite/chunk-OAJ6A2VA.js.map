{
  "version": 3,
  "sources": ["../react-query/es/core/utils.js", "../@babel/runtime/helpers/esm/setPrototypeOf.js", "../@babel/runtime/helpers/esm/inheritsLoose.js", "../react-query/es/core/subscribable.js", "../react-query/es/core/focusManager.js", "../react-query/es/core/onlineManager.js", "../react-query/es/core/retryer.js", "../react-query/es/core/notifyManager.js", "../react-query/es/core/logger.js", "../react-query/es/core/query.js", "../react-query/es/core/queryCache.js", "../react-query/es/core/mutation.js", "../react-query/es/core/mutationCache.js", "../react-query/es/core/infiniteQueryBehavior.js", "../react-query/es/core/queryClient.js", "../react-query/es/core/queryObserver.js", "../react-query/es/core/queriesObserver.js", "../react-query/es/core/infiniteQueryObserver.js", "../react-query/es/core/mutationObserver.js", "../react-query/es/core/types.js", "../react-query/es/core/index.js", "../react-query/es/react/QueryClientProvider.js", "../react-query/es/react/QueryErrorResetBoundary.js", "../react-query/es/react/useIsFetching.js", "../react-query/es/react/useIsMutating.js", "../react-query/es/react/useMutation.js", "../react-query/es/react/useBaseQuery.js", "../react-query/es/react/useQuery.js", "../react-query/es/react/useQueries.js", "../react-query/es/react/useInfiniteQuery.js", "../react-query/es/react/reactBatchedUpdates.js", "../react-query/es/react/setBatchUpdatesFn.js", "../react-query/es/react/logger.js", "../react-query/es/react/setLogger.js", "../react-query/es/react/types.js", "../react-query/es/react/index.js", "../react-query/es/index.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\n// TYPES\r\n// UTILS\r\nexport var isServer = typeof window === 'undefined';\r\nexport function noop() {\r\n  return undefined;\r\n}\r\nexport function functionalUpdate(updater, input) {\r\n  return typeof updater === 'function' ? updater(input) : updater;\r\n}\r\nexport function isValidTimeout(value) {\r\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\r\n}\r\nexport function ensureQueryKeyArray(value) {\r\n  return Array.isArray(value) ? value : [value];\r\n}\r\nexport function difference(array1, array2) {\r\n  return array1.filter(function (x) {\r\n    return array2.indexOf(x) === -1;\r\n  });\r\n}\r\nexport function replaceAt(array, index, value) {\r\n  var copy = array.slice(0);\r\n  copy[index] = value;\r\n  return copy;\r\n}\r\nexport function timeUntilStale(updatedAt, staleTime) {\r\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\r\n}\r\nexport function parseQueryArgs(arg1, arg2, arg3) {\r\n  if (!isQueryKey(arg1)) {\r\n    return arg1;\r\n  }\r\n\r\n  if (typeof arg2 === 'function') {\r\n    return _extends({}, arg3, {\r\n      queryKey: arg1,\r\n      queryFn: arg2\r\n    });\r\n  }\r\n\r\n  return _extends({}, arg2, {\r\n    queryKey: arg1\r\n  });\r\n}\r\nexport function parseMutationArgs(arg1, arg2, arg3) {\r\n  if (isQueryKey(arg1)) {\r\n    if (typeof arg2 === 'function') {\r\n      return _extends({}, arg3, {\r\n        mutationKey: arg1,\r\n        mutationFn: arg2\r\n      });\r\n    }\r\n\r\n    return _extends({}, arg2, {\r\n      mutationKey: arg1\r\n    });\r\n  }\r\n\r\n  if (typeof arg1 === 'function') {\r\n    return _extends({}, arg2, {\r\n      mutationFn: arg1\r\n    });\r\n  }\r\n\r\n  return _extends({}, arg1);\r\n}\r\nexport function parseFilterArgs(arg1, arg2, arg3) {\r\n  return isQueryKey(arg1) ? [_extends({}, arg2, {\r\n    queryKey: arg1\r\n  }), arg3] : [arg1 || {}, arg2];\r\n}\r\nexport function mapQueryStatusFilter(active, inactive) {\r\n  if (active === true && inactive === true || active == null && inactive == null) {\r\n    return 'all';\r\n  } else if (active === false && inactive === false) {\r\n    return 'none';\r\n  } else {\r\n    // At this point, active|inactive can only be true|false or false|true\r\n    // so, when only one value is provided, the missing one has to be the negated value\r\n    var isActive = active != null ? active : !inactive;\r\n    return isActive ? 'active' : 'inactive';\r\n  }\r\n}\r\nexport function matchQuery(filters, query) {\r\n  var active = filters.active,\r\n      exact = filters.exact,\r\n      fetching = filters.fetching,\r\n      inactive = filters.inactive,\r\n      predicate = filters.predicate,\r\n      queryKey = filters.queryKey,\r\n      stale = filters.stale;\r\n\r\n  if (isQueryKey(queryKey)) {\r\n    if (exact) {\r\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\r\n        return false;\r\n      }\r\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  var queryStatusFilter = mapQueryStatusFilter(active, inactive);\r\n\r\n  if (queryStatusFilter === 'none') {\r\n    return false;\r\n  } else if (queryStatusFilter !== 'all') {\r\n    var isActive = query.isActive();\r\n\r\n    if (queryStatusFilter === 'active' && !isActive) {\r\n      return false;\r\n    }\r\n\r\n    if (queryStatusFilter === 'inactive' && isActive) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\r\n    return false;\r\n  }\r\n\r\n  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\r\n    return false;\r\n  }\r\n\r\n  if (predicate && !predicate(query)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\nexport function matchMutation(filters, mutation) {\r\n  var exact = filters.exact,\r\n      fetching = filters.fetching,\r\n      predicate = filters.predicate,\r\n      mutationKey = filters.mutationKey;\r\n\r\n  if (isQueryKey(mutationKey)) {\r\n    if (!mutation.options.mutationKey) {\r\n      return false;\r\n    }\r\n\r\n    if (exact) {\r\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\r\n        return false;\r\n      }\r\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\r\n    return false;\r\n  }\r\n\r\n  if (predicate && !predicate(mutation)) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\nexport function hashQueryKeyByOptions(queryKey, options) {\r\n  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\r\n  return hashFn(queryKey);\r\n}\r\n/**\r\n * Default query keys hash function.\r\n */\r\n\r\nexport function hashQueryKey(queryKey) {\r\n  var asArray = ensureQueryKeyArray(queryKey);\r\n  return stableValueHash(asArray);\r\n}\r\n/**\r\n * Hashes the value into a stable hash.\r\n */\r\n\r\nexport function stableValueHash(value) {\r\n  return JSON.stringify(value, function (_, val) {\r\n    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {\r\n      result[key] = val[key];\r\n      return result;\r\n    }, {}) : val;\r\n  });\r\n}\r\n/**\r\n * Checks if key `b` partially matches with key `a`.\r\n */\r\n\r\nexport function partialMatchKey(a, b) {\r\n  return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));\r\n}\r\n/**\r\n * Checks if `b` partially matches with `a`.\r\n */\r\n\r\nexport function partialDeepEqual(a, b) {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof a !== typeof b) {\r\n    return false;\r\n  }\r\n\r\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n    return !Object.keys(b).some(function (key) {\r\n      return !partialDeepEqual(a[key], b[key]);\r\n    });\r\n  }\r\n\r\n  return false;\r\n}\r\n/**\r\n * This function returns `a` if `b` is deeply equal.\r\n * If not, it will replace any deeply equal children of `b` with those of `a`.\r\n * This can be used for structural sharing between JSON values for example.\r\n */\r\n\r\nexport function replaceEqualDeep(a, b) {\r\n  if (a === b) {\r\n    return a;\r\n  }\r\n\r\n  var array = Array.isArray(a) && Array.isArray(b);\r\n\r\n  if (array || isPlainObject(a) && isPlainObject(b)) {\r\n    var aSize = array ? a.length : Object.keys(a).length;\r\n    var bItems = array ? b : Object.keys(b);\r\n    var bSize = bItems.length;\r\n    var copy = array ? [] : {};\r\n    var equalItems = 0;\r\n\r\n    for (var i = 0; i < bSize; i++) {\r\n      var key = array ? i : bItems[i];\r\n      copy[key] = replaceEqualDeep(a[key], b[key]);\r\n\r\n      if (copy[key] === a[key]) {\r\n        equalItems++;\r\n      }\r\n    }\r\n\r\n    return aSize === bSize && equalItems === aSize ? a : copy;\r\n  }\r\n\r\n  return b;\r\n}\r\n/**\r\n * Shallow compare objects. Only works with objects that always have the same properties.\r\n */\r\n\r\nexport function shallowEqualObjects(a, b) {\r\n  if (a && !b || b && !a) {\r\n    return false;\r\n  }\r\n\r\n  for (var key in a) {\r\n    if (a[key] !== b[key]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\r\n\r\nexport function isPlainObject(o) {\r\n  if (!hasObjectPrototype(o)) {\r\n    return false;\r\n  } // If has modified constructor\r\n\r\n\r\n  var ctor = o.constructor;\r\n\r\n  if (typeof ctor === 'undefined') {\r\n    return true;\r\n  } // If has modified prototype\r\n\r\n\r\n  var prot = ctor.prototype;\r\n\r\n  if (!hasObjectPrototype(prot)) {\r\n    return false;\r\n  } // If constructor does not have an Object-specific method\r\n\r\n\r\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\r\n    return false;\r\n  } // Most likely a plain Object\r\n\r\n\r\n  return true;\r\n}\r\n\r\nfunction hasObjectPrototype(o) {\r\n  return Object.prototype.toString.call(o) === '[object Object]';\r\n}\r\n\r\nexport function isQueryKey(value) {\r\n  return typeof value === 'string' || Array.isArray(value);\r\n}\r\nexport function isError(value) {\r\n  return value instanceof Error;\r\n}\r\nexport function sleep(timeout) {\r\n  return new Promise(function (resolve) {\r\n    setTimeout(resolve, timeout);\r\n  });\r\n}\r\n/**\r\n * Schedules a microtask.\r\n * This can be useful to schedule state updates after rendering.\r\n */\r\n\r\nexport function scheduleMicrotask(callback) {\r\n  Promise.resolve().then(callback).catch(function (error) {\r\n    return setTimeout(function () {\r\n      throw error;\r\n    });\r\n  });\r\n}", "export default function _setPrototypeOf(o, p) {\r\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\r\n    o.__proto__ = p;\r\n    return o;\r\n  };\r\n\r\n  return _setPrototypeOf(o, p);\r\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\r\nexport default function _inheritsLoose(subClass, superClass) {\r\n  subClass.prototype = Object.create(superClass.prototype);\r\n  subClass.prototype.constructor = subClass;\r\n  setPrototypeOf(subClass, superClass);\r\n}", "export var Subscribable = /*#__PURE__*/function () {\r\n  function Subscribable() {\r\n    this.listeners = [];\r\n  }\r\n\r\n  var _proto = Subscribable.prototype;\r\n\r\n  _proto.subscribe = function subscribe(listener) {\r\n    var _this = this;\r\n\r\n    var callback = listener || function () {\r\n      return undefined;\r\n    };\r\n\r\n    this.listeners.push(callback);\r\n    this.onSubscribe();\r\n    return function () {\r\n      _this.listeners = _this.listeners.filter(function (x) {\r\n        return x !== callback;\r\n      });\r\n\r\n      _this.onUnsubscribe();\r\n    };\r\n  };\r\n\r\n  _proto.hasListeners = function hasListeners() {\r\n    return this.listeners.length > 0;\r\n  };\r\n\r\n  _proto.onSubscribe = function onSubscribe() {// Do nothing\r\n  };\r\n\r\n  _proto.onUnsubscribe = function onUnsubscribe() {// Do nothing\r\n  };\r\n\r\n  return Subscribable;\r\n}();", "import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport { Subscribable } from './subscribable';\r\nimport { isServer } from './utils';\r\n\r\nvar FocusManager = /*#__PURE__*/function (_Subscribable) {\r\n  _inheritsLoose(FocusManager, _Subscribable);\r\n\r\n  function FocusManager() {\r\n    return _Subscribable.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = FocusManager.prototype;\r\n\r\n  _proto.onSubscribe = function onSubscribe() {\r\n    if (!this.removeEventListener) {\r\n      this.setDefaultEventListener();\r\n    }\r\n  };\r\n\r\n  _proto.setEventListener = function setEventListener(setup) {\r\n    var _this = this;\r\n\r\n    if (this.removeEventListener) {\r\n      this.removeEventListener();\r\n    }\r\n\r\n    this.removeEventListener = setup(function (focused) {\r\n      if (typeof focused === 'boolean') {\r\n        _this.setFocused(focused);\r\n      } else {\r\n        _this.onFocus();\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.setFocused = function setFocused(focused) {\r\n    this.focused = focused;\r\n\r\n    if (focused) {\r\n      this.onFocus();\r\n    }\r\n  };\r\n\r\n  _proto.onFocus = function onFocus() {\r\n    this.listeners.forEach(function (listener) {\r\n      listener();\r\n    });\r\n  };\r\n\r\n  _proto.isFocused = function isFocused() {\r\n    if (typeof this.focused === 'boolean') {\r\n      return this.focused;\r\n    } // document global can be unavailable in react native\r\n\r\n\r\n    if (typeof document === 'undefined') {\r\n      return true;\r\n    }\r\n\r\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\r\n  };\r\n\r\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\r\n    var _window;\r\n\r\n    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\r\n      this.setEventListener(function (onFocus) {\r\n        var listener = function listener() {\r\n          return onFocus();\r\n        }; // Listen to visibillitychange and focus\r\n\r\n\r\n        window.addEventListener('visibilitychange', listener, false);\r\n        window.addEventListener('focus', listener, false);\r\n        return function () {\r\n          // Be sure to unsubscribe if a new handler is set\r\n          window.removeEventListener('visibilitychange', listener);\r\n          window.removeEventListener('focus', listener);\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  return FocusManager;\r\n}(Subscribable);\r\n\r\nexport var focusManager = new FocusManager();", "import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport { Subscribable } from './subscribable';\r\nimport { isServer } from './utils';\r\n\r\nvar OnlineManager = /*#__PURE__*/function (_Subscribable) {\r\n  _inheritsLoose(OnlineManager, _Subscribable);\r\n\r\n  function OnlineManager() {\r\n    return _Subscribable.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = OnlineManager.prototype;\r\n\r\n  _proto.onSubscribe = function onSubscribe() {\r\n    if (!this.removeEventListener) {\r\n      this.setDefaultEventListener();\r\n    }\r\n  };\r\n\r\n  _proto.setEventListener = function setEventListener(setup) {\r\n    var _this = this;\r\n\r\n    if (this.removeEventListener) {\r\n      this.removeEventListener();\r\n    }\r\n\r\n    this.removeEventListener = setup(function (online) {\r\n      if (typeof online === 'boolean') {\r\n        _this.setOnline(online);\r\n      } else {\r\n        _this.onOnline();\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.setOnline = function setOnline(online) {\r\n    this.online = online;\r\n\r\n    if (online) {\r\n      this.onOnline();\r\n    }\r\n  };\r\n\r\n  _proto.onOnline = function onOnline() {\r\n    this.listeners.forEach(function (listener) {\r\n      listener();\r\n    });\r\n  };\r\n\r\n  _proto.isOnline = function isOnline() {\r\n    if (typeof this.online === 'boolean') {\r\n      return this.online;\r\n    }\r\n\r\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\r\n      return true;\r\n    }\r\n\r\n    return navigator.onLine;\r\n  };\r\n\r\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\r\n    var _window;\r\n\r\n    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\r\n      this.setEventListener(function (onOnline) {\r\n        var listener = function listener() {\r\n          return onOnline();\r\n        }; // Listen to online\r\n\r\n\r\n        window.addEventListener('online', listener, false);\r\n        window.addEventListener('offline', listener, false);\r\n        return function () {\r\n          // Be sure to unsubscribe if a new handler is set\r\n          window.removeEventListener('online', listener);\r\n          window.removeEventListener('offline', listener);\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  return OnlineManager;\r\n}(Subscribable);\r\n\r\nexport var onlineManager = new OnlineManager();", "import { focusManager } from './focusManager';\r\nimport { onlineManager } from './onlineManager';\r\nimport { sleep } from './utils'; // TYPES\r\n\r\nfunction defaultRetryDelay(failureCount) {\r\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\r\n}\r\n\r\nexport function isCancelable(value) {\r\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\r\n}\r\nexport var CancelledError = function CancelledError(options) {\r\n  this.revert = options == null ? void 0 : options.revert;\r\n  this.silent = options == null ? void 0 : options.silent;\r\n};\r\nexport function isCancelledError(value) {\r\n  return value instanceof CancelledError;\r\n} // CLASS\r\n\r\nexport var Retryer = function Retryer(config) {\r\n  var _this = this;\r\n\r\n  var cancelRetry = false;\r\n  var cancelFn;\r\n  var continueFn;\r\n  var promiseResolve;\r\n  var promiseReject;\r\n\r\n  this.cancel = function (cancelOptions) {\r\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\r\n  };\r\n\r\n  this.cancelRetry = function () {\r\n    cancelRetry = true;\r\n  };\r\n\r\n  this.continue = function () {\r\n    return continueFn == null ? void 0 : continueFn();\r\n  };\r\n\r\n  this.failureCount = 0;\r\n  this.isPaused = false;\r\n  this.isResolved = false;\r\n  this.isTransportCancelable = false;\r\n  this.promise = new Promise(function (outerResolve, outerReject) {\r\n    promiseResolve = outerResolve;\r\n    promiseReject = outerReject;\r\n  });\r\n\r\n  var resolve = function resolve(value) {\r\n    if (!_this.isResolved) {\r\n      _this.isResolved = true;\r\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\r\n      continueFn == null ? void 0 : continueFn();\r\n      promiseResolve(value);\r\n    }\r\n  };\r\n\r\n  var reject = function reject(value) {\r\n    if (!_this.isResolved) {\r\n      _this.isResolved = true;\r\n      config.onError == null ? void 0 : config.onError(value);\r\n      continueFn == null ? void 0 : continueFn();\r\n      promiseReject(value);\r\n    }\r\n  };\r\n\r\n  var pause = function pause() {\r\n    return new Promise(function (continueResolve) {\r\n      continueFn = continueResolve;\r\n      _this.isPaused = true;\r\n      config.onPause == null ? void 0 : config.onPause();\r\n    }).then(function () {\r\n      continueFn = undefined;\r\n      _this.isPaused = false;\r\n      config.onContinue == null ? void 0 : config.onContinue();\r\n    });\r\n  }; // Create loop function\r\n\r\n\r\n  var run = function run() {\r\n    // Do nothing if already resolved\r\n    if (_this.isResolved) {\r\n      return;\r\n    }\r\n\r\n    var promiseOrValue; // Execute query\r\n\r\n    try {\r\n      promiseOrValue = config.fn();\r\n    } catch (error) {\r\n      promiseOrValue = Promise.reject(error);\r\n    } // Create callback to cancel this fetch\r\n\r\n\r\n    cancelFn = function cancelFn(cancelOptions) {\r\n      if (!_this.isResolved) {\r\n        reject(new CancelledError(cancelOptions)); // Cancel transport if supported\r\n\r\n        if (isCancelable(promiseOrValue)) {\r\n          try {\r\n            promiseOrValue.cancel();\r\n          } catch (_unused) {}\r\n        }\r\n      }\r\n    }; // Check if the transport layer support cancellation\r\n\r\n\r\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\r\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\r\n      var _config$retry, _config$retryDelay;\r\n\r\n      // Stop if the fetch is already resolved\r\n      if (_this.isResolved) {\r\n        return;\r\n      } // Do we need to retry the request?\r\n\r\n\r\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\r\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\r\n      var delay = typeof retryDelay === 'function' ? retryDelay(_this.failureCount, error) : retryDelay;\r\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\r\n\r\n      if (cancelRetry || !shouldRetry) {\r\n        // We are done if the query does not need to be retried\r\n        reject(error);\r\n        return;\r\n      }\r\n\r\n      _this.failureCount++; // Notify on fail\r\n\r\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\r\n\r\n      sleep(delay) // Pause if the document is not visible or when the device is offline\r\n      .then(function () {\r\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\r\n          return pause();\r\n        }\r\n      }).then(function () {\r\n        if (cancelRetry) {\r\n          reject(error);\r\n        } else {\r\n          run();\r\n        }\r\n      });\r\n    });\r\n  }; // Start loop\r\n\r\n\r\n  run();\r\n};", "import { scheduleMicrotask } from './utils'; // TYPES\r\n\r\n// CLASS\r\nvar NotifyManager = /*#__PURE__*/function () {\r\n  function NotifyManager() {\r\n    this.queue = [];\r\n    this.transactions = 0;\r\n\r\n    this.notifyFn = function (callback) {\r\n      callback();\r\n    };\r\n\r\n    this.batchNotifyFn = function (callback) {\r\n      callback();\r\n    };\r\n  }\r\n\r\n  var _proto = NotifyManager.prototype;\r\n\r\n  _proto.batch = function batch(callback) {\r\n    this.transactions++;\r\n    var result = callback();\r\n    this.transactions--;\r\n\r\n    if (!this.transactions) {\r\n      this.flush();\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  _proto.schedule = function schedule(callback) {\r\n    var _this = this;\r\n\r\n    if (this.transactions) {\r\n      this.queue.push(callback);\r\n    } else {\r\n      scheduleMicrotask(function () {\r\n        _this.notifyFn(callback);\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * All calls to the wrapped function will be batched.\r\n   */\r\n  ;\r\n\r\n  _proto.batchCalls = function batchCalls(callback) {\r\n    var _this2 = this;\r\n\r\n    return function () {\r\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      _this2.schedule(function () {\r\n        callback.apply(void 0, args);\r\n      });\r\n    };\r\n  };\r\n\r\n  _proto.flush = function flush() {\r\n    var _this3 = this;\r\n\r\n    var queue = this.queue;\r\n    this.queue = [];\r\n\r\n    if (queue.length) {\r\n      scheduleMicrotask(function () {\r\n        _this3.batchNotifyFn(function () {\r\n          queue.forEach(function (callback) {\r\n            _this3.notifyFn(callback);\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Use this method to set a custom notify function.\r\n   * This can be used to for example wrap notifications with `React.act` while running tests.\r\n   */\r\n  ;\r\n\r\n  _proto.setNotifyFunction = function setNotifyFunction(fn) {\r\n    this.notifyFn = fn;\r\n  }\r\n  /**\r\n   * Use this method to set a custom function to batch notifications together into a single tick.\r\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\r\n   */\r\n  ;\r\n\r\n  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\r\n    this.batchNotifyFn = fn;\r\n  };\r\n\r\n  return NotifyManager;\r\n}(); // SINGLETON\r\n\r\n\r\nexport var notifyManager = new NotifyManager();", "import { noop } from './utils'; // TYPES\r\n\r\n// FUNCTIONS\r\nvar logger = console || {\r\n  error: noop,\r\n  warn: noop,\r\n  log: noop\r\n};\r\nexport function getLogger() {\r\n  return logger;\r\n}\r\nexport function setLogger(newLogger) {\r\n  logger = newLogger;\r\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { functionalUpdate, isValidTimeout, noop, replaceEqualDeep, timeUntilStale, ensureQueryKeyArray } from './utils';\r\nimport { notifyManager } from './notifyManager';\r\nimport { getLogger } from './logger';\r\nimport { Retryer, isCancelledError } from './retryer'; // TYPES\r\n\r\n// CLASS\r\nexport var Query = /*#__PURE__*/function () {\r\n  function Query(config) {\r\n    this.defaultOptions = config.defaultOptions;\r\n    this.setOptions(config.options);\r\n    this.observers = [];\r\n    this.cache = config.cache;\r\n    this.queryKey = config.queryKey;\r\n    this.queryHash = config.queryHash;\r\n    this.initialState = config.state || this.getDefaultState(this.options);\r\n    this.state = this.initialState;\r\n    this.scheduleGc();\r\n  }\r\n\r\n  var _proto = Query.prototype;\r\n\r\n  _proto.setOptions = function setOptions(options) {\r\n    var _this$options$cacheTi;\r\n\r\n    this.options = _extends({}, this.defaultOptions, options); // Default to 5 minutes if not cache time is set\r\n\r\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\r\n  };\r\n\r\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\r\n    this.defaultOptions = options;\r\n  };\r\n\r\n  _proto.scheduleGc = function scheduleGc() {\r\n    var _this = this;\r\n\r\n    this.clearGcTimeout();\r\n\r\n    if (isValidTimeout(this.cacheTime)) {\r\n      this.gcTimeout = setTimeout(function () {\r\n        _this.optionalRemove();\r\n      }, this.cacheTime);\r\n    }\r\n  };\r\n\r\n  _proto.clearGcTimeout = function clearGcTimeout() {\r\n    clearTimeout(this.gcTimeout);\r\n    this.gcTimeout = undefined;\r\n  };\r\n\r\n  _proto.optionalRemove = function optionalRemove() {\r\n    if (!this.observers.length && !this.state.isFetching) {\r\n      this.cache.remove(this);\r\n    }\r\n  };\r\n\r\n  _proto.setData = function setData(updater, options) {\r\n    var _this$options$isDataE, _this$options;\r\n\r\n    var prevData = this.state.data; // Get the new data\r\n\r\n    var data = functionalUpdate(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\r\n\r\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\r\n      data = prevData;\r\n    } else if (this.options.structuralSharing !== false) {\r\n      // Structurally share data between prev and new data if needed\r\n      data = replaceEqualDeep(prevData, data);\r\n    } // Set data and mark it as cached\r\n\r\n\r\n    this.dispatch({\r\n      data: data,\r\n      type: 'success',\r\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\r\n    });\r\n    return data;\r\n  };\r\n\r\n  _proto.setState = function setState(state, setStateOptions) {\r\n    this.dispatch({\r\n      type: 'setState',\r\n      state: state,\r\n      setStateOptions: setStateOptions\r\n    });\r\n  };\r\n\r\n  _proto.cancel = function cancel(options) {\r\n    var _this$retryer;\r\n\r\n    var promise = this.promise;\r\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\r\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\r\n  };\r\n\r\n  _proto.destroy = function destroy() {\r\n    this.clearGcTimeout();\r\n    this.cancel({\r\n      silent: true\r\n    });\r\n  };\r\n\r\n  _proto.reset = function reset() {\r\n    this.destroy();\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  _proto.isActive = function isActive() {\r\n    return this.observers.some(function (observer) {\r\n      return observer.options.enabled !== false;\r\n    });\r\n  };\r\n\r\n  _proto.isFetching = function isFetching() {\r\n    return this.state.isFetching;\r\n  };\r\n\r\n  _proto.isStale = function isStale() {\r\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\r\n      return observer.getCurrentResult().isStale;\r\n    });\r\n  };\r\n\r\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\r\n    if (staleTime === void 0) {\r\n      staleTime = 0;\r\n    }\r\n\r\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\r\n  };\r\n\r\n  _proto.onFocus = function onFocus() {\r\n    var _this$retryer2;\r\n\r\n    var observer = this.observers.find(function (x) {\r\n      return x.shouldFetchOnWindowFocus();\r\n    });\r\n\r\n    if (observer) {\r\n      observer.refetch();\r\n    } // Continue fetch if currently paused\r\n\r\n\r\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\r\n  };\r\n\r\n  _proto.onOnline = function onOnline() {\r\n    var _this$retryer3;\r\n\r\n    var observer = this.observers.find(function (x) {\r\n      return x.shouldFetchOnReconnect();\r\n    });\r\n\r\n    if (observer) {\r\n      observer.refetch();\r\n    } // Continue fetch if currently paused\r\n\r\n\r\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\r\n  };\r\n\r\n  _proto.addObserver = function addObserver(observer) {\r\n    if (this.observers.indexOf(observer) === -1) {\r\n      this.observers.push(observer); // Stop the query from being garbage collected\r\n\r\n      this.clearGcTimeout();\r\n      this.cache.notify({\r\n        type: 'observerAdded',\r\n        query: this,\r\n        observer: observer\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.removeObserver = function removeObserver(observer) {\r\n    if (this.observers.indexOf(observer) !== -1) {\r\n      this.observers = this.observers.filter(function (x) {\r\n        return x !== observer;\r\n      });\r\n\r\n      if (!this.observers.length) {\r\n        // If the transport layer does not support cancellation\r\n        // we'll let the query continue so the result can be cached\r\n        if (this.retryer) {\r\n          if (this.retryer.isTransportCancelable) {\r\n            this.retryer.cancel({\r\n              revert: true\r\n            });\r\n          } else {\r\n            this.retryer.cancelRetry();\r\n          }\r\n        }\r\n\r\n        if (this.cacheTime) {\r\n          this.scheduleGc();\r\n        } else {\r\n          this.cache.remove(this);\r\n        }\r\n      }\r\n\r\n      this.cache.notify({\r\n        type: 'observerRemoved',\r\n        query: this,\r\n        observer: observer\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.getObserversCount = function getObserversCount() {\r\n    return this.observers.length;\r\n  };\r\n\r\n  _proto.invalidate = function invalidate() {\r\n    if (!this.state.isInvalidated) {\r\n      this.dispatch({\r\n        type: 'invalidate'\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.fetch = function fetch(options, fetchOptions) {\r\n    var _this2 = this,\r\n        _this$options$behavio,\r\n        _context$fetchOptions;\r\n\r\n    if (this.state.isFetching) {\r\n      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\r\n        // Silently cancel current fetch if the user wants to cancel refetches\r\n        this.cancel({\r\n          silent: true\r\n        });\r\n      } else if (this.promise) {\r\n        // Return current promise if we are already fetching\r\n        return this.promise;\r\n      }\r\n    } // Update config if passed, otherwise the config from the last execution is used\r\n\r\n\r\n    if (options) {\r\n      this.setOptions(options);\r\n    } // Use the options from the first observer with a query function if no function is found.\r\n    // This can happen when the query is hydrated or created with setQueryData.\r\n\r\n\r\n    if (!this.options.queryFn) {\r\n      var observer = this.observers.find(function (x) {\r\n        return x.options.queryFn;\r\n      });\r\n\r\n      if (observer) {\r\n        this.setOptions(observer.options);\r\n      }\r\n    }\r\n\r\n    var queryKey = ensureQueryKeyArray(this.queryKey); // Create query function context\r\n\r\n    var queryFnContext = {\r\n      queryKey: queryKey,\r\n      pageParam: undefined\r\n    }; // Create fetch function\r\n\r\n    var fetchFn = function fetchFn() {\r\n      return _this2.options.queryFn ? _this2.options.queryFn(queryFnContext) : Promise.reject('Missing queryFn');\r\n    }; // Trigger behavior hook\r\n\r\n\r\n    var context = {\r\n      fetchOptions: fetchOptions,\r\n      options: this.options,\r\n      queryKey: queryKey,\r\n      state: this.state,\r\n      fetchFn: fetchFn\r\n    };\r\n\r\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\r\n      var _this$options$behavio2;\r\n\r\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\r\n    } // Store state in case the current fetch needs to be reverted\r\n\r\n\r\n    this.revertState = this.state; // Set to fetching state if not already in it\r\n\r\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\r\n      var _context$fetchOptions2;\r\n\r\n      this.dispatch({\r\n        type: 'fetch',\r\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\r\n      });\r\n    } // Try to fetch the data\r\n\r\n\r\n    this.retryer = new Retryer({\r\n      fn: context.fetchFn,\r\n      onSuccess: function onSuccess(data) {\r\n        _this2.setData(data); // Remove query after fetching if cache time is 0\r\n\r\n\r\n        if (_this2.cacheTime === 0) {\r\n          _this2.optionalRemove();\r\n        }\r\n      },\r\n      onError: function onError(error) {\r\n        // Optimistically update state if needed\r\n        if (!(isCancelledError(error) && error.silent)) {\r\n          _this2.dispatch({\r\n            type: 'error',\r\n            error: error\r\n          });\r\n        }\r\n\r\n        if (!isCancelledError(error)) {\r\n          // Notify cache callback\r\n          if (_this2.cache.config.onError) {\r\n            _this2.cache.config.onError(error, _this2);\r\n          } // Log error\r\n\r\n\r\n          getLogger().error(error);\r\n        } // Remove query after fetching if cache time is 0\r\n\r\n\r\n        if (_this2.cacheTime === 0) {\r\n          _this2.optionalRemove();\r\n        }\r\n      },\r\n      onFail: function onFail() {\r\n        _this2.dispatch({\r\n          type: 'failed'\r\n        });\r\n      },\r\n      onPause: function onPause() {\r\n        _this2.dispatch({\r\n          type: 'pause'\r\n        });\r\n      },\r\n      onContinue: function onContinue() {\r\n        _this2.dispatch({\r\n          type: 'continue'\r\n        });\r\n      },\r\n      retry: context.options.retry,\r\n      retryDelay: context.options.retryDelay\r\n    });\r\n    this.promise = this.retryer.promise;\r\n    return this.promise;\r\n  };\r\n\r\n  _proto.dispatch = function dispatch(action) {\r\n    var _this3 = this;\r\n\r\n    this.state = this.reducer(this.state, action);\r\n    notifyManager.batch(function () {\r\n      _this3.observers.forEach(function (observer) {\r\n        observer.onQueryUpdate(action);\r\n      });\r\n\r\n      _this3.cache.notify({\r\n        query: _this3,\r\n        type: 'queryUpdated',\r\n        action: action\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.getDefaultState = function getDefaultState(options) {\r\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\r\n    var hasInitialData = typeof options.initialData !== 'undefined';\r\n    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\r\n    var hasData = typeof data !== 'undefined';\r\n    return {\r\n      data: data,\r\n      dataUpdateCount: 0,\r\n      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\r\n      error: null,\r\n      errorUpdateCount: 0,\r\n      errorUpdatedAt: 0,\r\n      fetchFailureCount: 0,\r\n      fetchMeta: null,\r\n      isFetching: false,\r\n      isInvalidated: false,\r\n      isPaused: false,\r\n      status: hasData ? 'success' : 'idle'\r\n    };\r\n  };\r\n\r\n  _proto.reducer = function reducer(state, action) {\r\n    var _action$meta, _action$dataUpdatedAt;\r\n\r\n    switch (action.type) {\r\n      case 'failed':\r\n        return _extends({}, state, {\r\n          fetchFailureCount: state.fetchFailureCount + 1\r\n        });\r\n\r\n      case 'pause':\r\n        return _extends({}, state, {\r\n          isPaused: true\r\n        });\r\n\r\n      case 'continue':\r\n        return _extends({}, state, {\r\n          isPaused: false\r\n        });\r\n\r\n      case 'fetch':\r\n        return _extends({}, state, {\r\n          fetchFailureCount: 0,\r\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\r\n          isFetching: true,\r\n          isPaused: false,\r\n          status: !state.dataUpdatedAt ? 'loading' : state.status\r\n        });\r\n\r\n      case 'success':\r\n        return _extends({}, state, {\r\n          data: action.data,\r\n          dataUpdateCount: state.dataUpdateCount + 1,\r\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\r\n          error: null,\r\n          fetchFailureCount: 0,\r\n          isFetching: false,\r\n          isInvalidated: false,\r\n          isPaused: false,\r\n          status: 'success'\r\n        });\r\n\r\n      case 'error':\r\n        var error = action.error;\r\n\r\n        if (isCancelledError(error) && error.revert && this.revertState) {\r\n          return _extends({}, this.revertState);\r\n        }\r\n\r\n        return _extends({}, state, {\r\n          error: error,\r\n          errorUpdateCount: state.errorUpdateCount + 1,\r\n          errorUpdatedAt: Date.now(),\r\n          fetchFailureCount: state.fetchFailureCount + 1,\r\n          isFetching: false,\r\n          isPaused: false,\r\n          status: 'error'\r\n        });\r\n\r\n      case 'invalidate':\r\n        return _extends({}, state, {\r\n          isInvalidated: true\r\n        });\r\n\r\n      case 'setState':\r\n        return _extends({}, state, action.state);\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  return Query;\r\n}();", "import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport { hashQueryKeyByOptions, matchQuery, parseFilterArgs } from './utils';\r\nimport { Query } from './query';\r\nimport { notifyManager } from './notifyManager';\r\nimport { Subscribable } from './subscribable';\r\n// CLASS\r\nexport var QueryCache = /*#__PURE__*/function (_Subscribable) {\r\n  _inheritsLoose(QueryCache, _Subscribable);\r\n\r\n  function QueryCache(config) {\r\n    var _this;\r\n\r\n    _this = _Subscribable.call(this) || this;\r\n    _this.config = config || {};\r\n    _this.queries = [];\r\n    _this.queriesMap = {};\r\n    return _this;\r\n  }\r\n\r\n  var _proto = QueryCache.prototype;\r\n\r\n  _proto.build = function build(client, options, state) {\r\n    var _options$queryHash;\r\n\r\n    var queryKey = options.queryKey;\r\n    var queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);\r\n    var query = this.get(queryHash);\r\n\r\n    if (!query) {\r\n      query = new Query({\r\n        cache: this,\r\n        queryKey: queryKey,\r\n        queryHash: queryHash,\r\n        options: client.defaultQueryOptions(options),\r\n        state: state,\r\n        defaultOptions: client.getQueryDefaults(queryKey)\r\n      });\r\n      this.add(query);\r\n    }\r\n\r\n    return query;\r\n  };\r\n\r\n  _proto.add = function add(query) {\r\n    if (!this.queriesMap[query.queryHash]) {\r\n      this.queriesMap[query.queryHash] = query;\r\n      this.queries.push(query);\r\n      this.notify({\r\n        type: 'queryAdded',\r\n        query: query\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.remove = function remove(query) {\r\n    var queryInMap = this.queriesMap[query.queryHash];\r\n\r\n    if (queryInMap) {\r\n      query.destroy();\r\n      this.queries = this.queries.filter(function (x) {\r\n        return x !== query;\r\n      });\r\n\r\n      if (queryInMap === query) {\r\n        delete this.queriesMap[query.queryHash];\r\n      }\r\n\r\n      this.notify({\r\n        type: 'queryRemoved',\r\n        query: query\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.clear = function clear() {\r\n    var _this2 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      _this2.queries.forEach(function (query) {\r\n        _this2.remove(query);\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.get = function get(queryHash) {\r\n    return this.queriesMap[queryHash];\r\n  };\r\n\r\n  _proto.getAll = function getAll() {\r\n    return this.queries;\r\n  };\r\n\r\n  _proto.find = function find(arg1, arg2) {\r\n    var _parseFilterArgs = parseFilterArgs(arg1, arg2),\r\n        filters = _parseFilterArgs[0];\r\n\r\n    if (typeof filters.exact === 'undefined') {\r\n      filters.exact = true;\r\n    }\r\n\r\n    return this.queries.find(function (query) {\r\n      return matchQuery(filters, query);\r\n    });\r\n  };\r\n\r\n  _proto.findAll = function findAll(arg1, arg2) {\r\n    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2),\r\n        filters = _parseFilterArgs2[0];\r\n\r\n    return filters ? this.queries.filter(function (query) {\r\n      return matchQuery(filters, query);\r\n    }) : this.queries;\r\n  };\r\n\r\n  _proto.notify = function notify(event) {\r\n    var _this3 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      _this3.listeners.forEach(function (listener) {\r\n        listener(event);\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.onFocus = function onFocus() {\r\n    var _this4 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      _this4.queries.forEach(function (query) {\r\n        query.onFocus();\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.onOnline = function onOnline() {\r\n    var _this5 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      _this5.queries.forEach(function (query) {\r\n        query.onOnline();\r\n      });\r\n    });\r\n  };\r\n\r\n  return QueryCache;\r\n}(Subscribable);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { getLogger } from './logger';\r\nimport { notifyManager } from './notifyManager';\r\nimport { Retryer } from './retryer';\r\nimport { noop } from './utils'; // TYPES\r\n\r\n// CLASS\r\nexport var Mutation = /*#__PURE__*/function () {\r\n  function Mutation(config) {\r\n    this.options = _extends({}, config.defaultOptions, config.options);\r\n    this.mutationId = config.mutationId;\r\n    this.mutationCache = config.mutationCache;\r\n    this.observers = [];\r\n    this.state = config.state || getDefaultState();\r\n  }\r\n\r\n  var _proto = Mutation.prototype;\r\n\r\n  _proto.setState = function setState(state) {\r\n    this.dispatch({\r\n      type: 'setState',\r\n      state: state\r\n    });\r\n  };\r\n\r\n  _proto.addObserver = function addObserver(observer) {\r\n    if (this.observers.indexOf(observer) === -1) {\r\n      this.observers.push(observer);\r\n    }\r\n  };\r\n\r\n  _proto.removeObserver = function removeObserver(observer) {\r\n    this.observers = this.observers.filter(function (x) {\r\n      return x !== observer;\r\n    });\r\n  };\r\n\r\n  _proto.cancel = function cancel() {\r\n    if (this.retryer) {\r\n      this.retryer.cancel();\r\n      return this.retryer.promise.then(noop).catch(noop);\r\n    }\r\n\r\n    return Promise.resolve();\r\n  };\r\n\r\n  _proto.continue = function _continue() {\r\n    if (this.retryer) {\r\n      this.retryer.continue();\r\n      return this.retryer.promise;\r\n    }\r\n\r\n    return this.execute();\r\n  };\r\n\r\n  _proto.execute = function execute() {\r\n    var _this = this;\r\n\r\n    var data;\r\n    var restored = this.state.status === 'loading';\r\n    var promise = Promise.resolve();\r\n\r\n    if (!restored) {\r\n      this.dispatch({\r\n        type: 'loading',\r\n        variables: this.options.variables\r\n      });\r\n      promise = promise.then(function () {\r\n        return _this.options.onMutate == null ? void 0 : _this.options.onMutate(_this.state.variables);\r\n      }).then(function (context) {\r\n        if (context !== _this.state.context) {\r\n          _this.dispatch({\r\n            type: 'loading',\r\n            context: context,\r\n            variables: _this.state.variables\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return promise.then(function () {\r\n      return _this.executeMutation();\r\n    }).then(function (result) {\r\n      data = result;\r\n    }).then(function () {\r\n      return _this.options.onSuccess == null ? void 0 : _this.options.onSuccess(data, _this.state.variables, _this.state.context);\r\n    }).then(function () {\r\n      return _this.options.onSettled == null ? void 0 : _this.options.onSettled(data, null, _this.state.variables, _this.state.context);\r\n    }).then(function () {\r\n      _this.dispatch({\r\n        type: 'success',\r\n        data: data\r\n      });\r\n\r\n      return data;\r\n    }).catch(function (error) {\r\n      // Notify cache callback\r\n      if (_this.mutationCache.config.onError) {\r\n        _this.mutationCache.config.onError(error, _this.state.variables, _this.state.context, _this);\r\n      } // Log error\r\n\r\n\r\n      getLogger().error(error);\r\n      return Promise.resolve().then(function () {\r\n        return _this.options.onError == null ? void 0 : _this.options.onError(error, _this.state.variables, _this.state.context);\r\n      }).then(function () {\r\n        return _this.options.onSettled == null ? void 0 : _this.options.onSettled(undefined, error, _this.state.variables, _this.state.context);\r\n      }).then(function () {\r\n        _this.dispatch({\r\n          type: 'error',\r\n          error: error\r\n        });\r\n\r\n        throw error;\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.executeMutation = function executeMutation() {\r\n    var _this2 = this,\r\n        _this$options$retry;\r\n\r\n    this.retryer = new Retryer({\r\n      fn: function fn() {\r\n        if (!_this2.options.mutationFn) {\r\n          return Promise.reject('No mutationFn found');\r\n        }\r\n\r\n        return _this2.options.mutationFn(_this2.state.variables);\r\n      },\r\n      onFail: function onFail() {\r\n        _this2.dispatch({\r\n          type: 'failed'\r\n        });\r\n      },\r\n      onPause: function onPause() {\r\n        _this2.dispatch({\r\n          type: 'pause'\r\n        });\r\n      },\r\n      onContinue: function onContinue() {\r\n        _this2.dispatch({\r\n          type: 'continue'\r\n        });\r\n      },\r\n      retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\r\n      retryDelay: this.options.retryDelay\r\n    });\r\n    return this.retryer.promise;\r\n  };\r\n\r\n  _proto.dispatch = function dispatch(action) {\r\n    var _this3 = this;\r\n\r\n    this.state = reducer(this.state, action);\r\n    notifyManager.batch(function () {\r\n      _this3.observers.forEach(function (observer) {\r\n        observer.onMutationUpdate(action);\r\n      });\r\n\r\n      _this3.mutationCache.notify(_this3);\r\n    });\r\n  };\r\n\r\n  return Mutation;\r\n}();\r\nexport function getDefaultState() {\r\n  return {\r\n    context: undefined,\r\n    data: undefined,\r\n    error: null,\r\n    failureCount: 0,\r\n    isPaused: false,\r\n    status: 'idle',\r\n    variables: undefined\r\n  };\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'failed':\r\n      return _extends({}, state, {\r\n        failureCount: state.failureCount + 1\r\n      });\r\n\r\n    case 'pause':\r\n      return _extends({}, state, {\r\n        isPaused: true\r\n      });\r\n\r\n    case 'continue':\r\n      return _extends({}, state, {\r\n        isPaused: false\r\n      });\r\n\r\n    case 'loading':\r\n      return _extends({}, state, {\r\n        context: action.context,\r\n        data: undefined,\r\n        error: null,\r\n        isPaused: false,\r\n        status: 'loading',\r\n        variables: action.variables\r\n      });\r\n\r\n    case 'success':\r\n      return _extends({}, state, {\r\n        data: action.data,\r\n        error: null,\r\n        status: 'success',\r\n        isPaused: false\r\n      });\r\n\r\n    case 'error':\r\n      return _extends({}, state, {\r\n        data: undefined,\r\n        error: action.error,\r\n        failureCount: state.failureCount + 1,\r\n        isPaused: false,\r\n        status: 'error'\r\n      });\r\n\r\n    case 'setState':\r\n      return _extends({}, state, action.state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}", "import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport { notifyManager } from './notifyManager';\r\nimport { Mutation } from './mutation';\r\nimport { matchMutation, noop } from './utils';\r\nimport { Subscribable } from './subscribable'; // TYPES\r\n\r\n// CLASS\r\nexport var MutationCache = /*#__PURE__*/function (_Subscribable) {\r\n  _inheritsLoose(MutationCache, _Subscribable);\r\n\r\n  function MutationCache(config) {\r\n    var _this;\r\n\r\n    _this = _Subscribable.call(this) || this;\r\n    _this.config = config || {};\r\n    _this.mutations = [];\r\n    _this.mutationId = 0;\r\n    return _this;\r\n  }\r\n\r\n  var _proto = MutationCache.prototype;\r\n\r\n  _proto.build = function build(client, options, state) {\r\n    var mutation = new Mutation({\r\n      mutationCache: this,\r\n      mutationId: ++this.mutationId,\r\n      options: client.defaultMutationOptions(options),\r\n      state: state,\r\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\r\n    });\r\n    this.add(mutation);\r\n    return mutation;\r\n  };\r\n\r\n  _proto.add = function add(mutation) {\r\n    this.mutations.push(mutation);\r\n    this.notify(mutation);\r\n  };\r\n\r\n  _proto.remove = function remove(mutation) {\r\n    this.mutations = this.mutations.filter(function (x) {\r\n      return x !== mutation;\r\n    });\r\n    mutation.cancel();\r\n    this.notify(mutation);\r\n  };\r\n\r\n  _proto.clear = function clear() {\r\n    var _this2 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      _this2.mutations.forEach(function (mutation) {\r\n        _this2.remove(mutation);\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.getAll = function getAll() {\r\n    return this.mutations;\r\n  };\r\n\r\n  _proto.find = function find(filters) {\r\n    if (typeof filters.exact === 'undefined') {\r\n      filters.exact = true;\r\n    }\r\n\r\n    return this.mutations.find(function (mutation) {\r\n      return matchMutation(filters, mutation);\r\n    });\r\n  };\r\n\r\n  _proto.findAll = function findAll(filters) {\r\n    return this.mutations.filter(function (mutation) {\r\n      return matchMutation(filters, mutation);\r\n    });\r\n  };\r\n\r\n  _proto.notify = function notify(mutation) {\r\n    var _this3 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      _this3.listeners.forEach(function (listener) {\r\n        listener(mutation);\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.onFocus = function onFocus() {\r\n    this.resumePausedMutations();\r\n  };\r\n\r\n  _proto.onOnline = function onOnline() {\r\n    this.resumePausedMutations();\r\n  };\r\n\r\n  _proto.resumePausedMutations = function resumePausedMutations() {\r\n    var pausedMutations = this.mutations.filter(function (x) {\r\n      return x.state.isPaused;\r\n    });\r\n    return notifyManager.batch(function () {\r\n      return pausedMutations.reduce(function (promise, mutation) {\r\n        return promise.then(function () {\r\n          return mutation.continue().catch(noop);\r\n        });\r\n      }, Promise.resolve());\r\n    });\r\n  };\r\n\r\n  return MutationCache;\r\n}(Subscribable);", "import { isCancelable } from './retryer';\r\nexport function infiniteQueryBehavior() {\r\n  return {\r\n    onFetch: function onFetch(context) {\r\n      context.fetchFn = function () {\r\n        var _context$fetchOptions, _context$fetchOptions2, _context$state$data, _context$state$data2;\r\n\r\n        var fetchMore = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.fetchMore;\r\n        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\r\n        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\r\n        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\r\n        var oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\r\n        var oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\r\n        var newPageParams = oldPageParams;\r\n        var cancelled = false; // Get query function\r\n\r\n        var queryFn = context.options.queryFn || function () {\r\n          return Promise.reject('Missing queryFn');\r\n        }; // Create function to fetch a page\r\n\r\n\r\n        var fetchPage = function fetchPage(pages, manual, param, previous) {\r\n          if (cancelled) {\r\n            return Promise.reject('Cancelled');\r\n          }\r\n\r\n          if (typeof param === 'undefined' && !manual && pages.length) {\r\n            return Promise.resolve(pages);\r\n          }\r\n\r\n          var queryFnContext = {\r\n            queryKey: context.queryKey,\r\n            pageParam: param\r\n          };\r\n          var queryFnResult = queryFn(queryFnContext);\r\n          var promise = Promise.resolve(queryFnResult).then(function (page) {\r\n            newPageParams = previous ? [param].concat(newPageParams) : [].concat(newPageParams, [param]);\r\n            return previous ? [page].concat(pages) : [].concat(pages, [page]);\r\n          });\r\n\r\n          if (isCancelable(queryFnResult)) {\r\n            var promiseAsAny = promise;\r\n            promiseAsAny.cancel = queryFnResult.cancel;\r\n          }\r\n\r\n          return promise;\r\n        };\r\n\r\n        var promise; // Fetch first page?\r\n\r\n        if (!oldPages.length) {\r\n          promise = fetchPage([]);\r\n        } // Fetch next page?\r\n        else if (isFetchingNextPage) {\r\n            var manual = typeof pageParam !== 'undefined';\r\n            var param = manual ? pageParam : getNextPageParam(context.options, oldPages);\r\n            promise = fetchPage(oldPages, manual, param);\r\n          } // Fetch previous page?\r\n          else if (isFetchingPreviousPage) {\r\n              var _manual = typeof pageParam !== 'undefined';\r\n\r\n              var _param = _manual ? pageParam : getPreviousPageParam(context.options, oldPages);\r\n\r\n              promise = fetchPage(oldPages, _manual, _param, true);\r\n            } // Refetch pages\r\n            else {\r\n                (function () {\r\n                  newPageParams = [];\r\n                  var manual = typeof context.options.getNextPageParam === 'undefined'; // Fetch first page\r\n\r\n                  promise = fetchPage([], manual, oldPageParams[0]); // Fetch remaining pages\r\n\r\n                  var _loop = function _loop(i) {\r\n                    promise = promise.then(function (pages) {\r\n                      var param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\r\n                      return fetchPage(pages, manual, param);\r\n                    });\r\n                  };\r\n\r\n                  for (var i = 1; i < oldPages.length; i++) {\r\n                    _loop(i);\r\n                  }\r\n                })();\r\n              }\r\n\r\n        var finalPromise = promise.then(function (pages) {\r\n          return {\r\n            pages: pages,\r\n            pageParams: newPageParams\r\n          };\r\n        });\r\n        var finalPromiseAsAny = finalPromise;\r\n\r\n        finalPromiseAsAny.cancel = function () {\r\n          cancelled = true;\r\n\r\n          if (isCancelable(promise)) {\r\n            promise.cancel();\r\n          }\r\n        };\r\n\r\n        return finalPromise;\r\n      };\r\n    }\r\n  };\r\n}\r\nexport function getNextPageParam(options, pages) {\r\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\r\n}\r\nexport function getPreviousPageParam(options, pages) {\r\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\r\n}\r\n/**\r\n * Checks if there is a next page.\r\n * Returns `undefined` if it cannot be determined.\r\n */\r\n\r\nexport function hasNextPage(options, pages) {\r\n  if (options.getNextPageParam && Array.isArray(pages)) {\r\n    var nextPageParam = getNextPageParam(options, pages);\r\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\r\n  }\r\n}\r\n/**\r\n * Checks if there is a previous page.\r\n * Returns `undefined` if it cannot be determined.\r\n */\r\n\r\nexport function hasPreviousPage(options, pages) {\r\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\r\n    var previousPageParam = getPreviousPageParam(options, pages);\r\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\r\n  }\r\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport { hashQueryKey, noop, parseFilterArgs, parseQueryArgs, partialMatchKey, hashQueryKeyByOptions } from './utils';\r\nimport { QueryCache } from './queryCache';\r\nimport { MutationCache } from './mutationCache';\r\nimport { focusManager } from './focusManager';\r\nimport { onlineManager } from './onlineManager';\r\nimport { notifyManager } from './notifyManager';\r\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'; // TYPES\r\n\r\n// CLASS\r\nexport var QueryClient = /*#__PURE__*/function () {\r\n  function QueryClient(config) {\r\n    if (config === void 0) {\r\n      config = {};\r\n    }\r\n\r\n    this.queryCache = config.queryCache || new QueryCache();\r\n    this.mutationCache = config.mutationCache || new MutationCache();\r\n    this.defaultOptions = config.defaultOptions || {};\r\n    this.queryDefaults = [];\r\n    this.mutationDefaults = [];\r\n  }\r\n\r\n  var _proto = QueryClient.prototype;\r\n\r\n  _proto.mount = function mount() {\r\n    var _this = this;\r\n\r\n    this.unsubscribeFocus = focusManager.subscribe(function () {\r\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\r\n        _this.mutationCache.onFocus();\r\n\r\n        _this.queryCache.onFocus();\r\n      }\r\n    });\r\n    this.unsubscribeOnline = onlineManager.subscribe(function () {\r\n      if (focusManager.isFocused() && onlineManager.isOnline()) {\r\n        _this.mutationCache.onOnline();\r\n\r\n        _this.queryCache.onOnline();\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.unmount = function unmount() {\r\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\r\n\r\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\r\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\r\n  };\r\n\r\n  _proto.isFetching = function isFetching(arg1, arg2) {\r\n    var _parseFilterArgs = parseFilterArgs(arg1, arg2),\r\n        filters = _parseFilterArgs[0];\r\n\r\n    filters.fetching = true;\r\n    return this.queryCache.findAll(filters).length;\r\n  };\r\n\r\n  _proto.isMutating = function isMutating(filters) {\r\n    return this.mutationCache.findAll(_extends({}, filters, {\r\n      fetching: true\r\n    })).length;\r\n  };\r\n\r\n  _proto.getQueryData = function getQueryData(queryKey, filters) {\r\n    var _this$queryCache$find;\r\n\r\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\r\n  };\r\n\r\n  _proto.setQueryData = function setQueryData(queryKey, updater, options) {\r\n    var parsedOptions = parseQueryArgs(queryKey);\r\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions);\r\n    return this.queryCache.build(this, defaultedOptions).setData(updater, options);\r\n  };\r\n\r\n  _proto.setQueriesData = function setQueriesData(queryKeyOrFilters, updater, options) {\r\n    var _this2 = this;\r\n\r\n    return notifyManager.batch(function () {\r\n      return _this2.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref) {\r\n        var queryKey = _ref.queryKey;\r\n        return [queryKey, _this2.setQueryData(queryKey, updater, options)];\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.getQueryState = function getQueryState(queryKey, filters) {\r\n    var _this$queryCache$find2;\r\n\r\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\r\n  };\r\n\r\n  _proto.removeQueries = function removeQueries(arg1, arg2) {\r\n    var _parseFilterArgs2 = parseFilterArgs(arg1, arg2),\r\n        filters = _parseFilterArgs2[0];\r\n\r\n    var queryCache = this.queryCache;\r\n    notifyManager.batch(function () {\r\n      queryCache.findAll(filters).forEach(function (query) {\r\n        queryCache.remove(query);\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.resetQueries = function resetQueries(arg1, arg2, arg3) {\r\n    var _this3 = this;\r\n\r\n    var _parseFilterArgs3 = parseFilterArgs(arg1, arg2, arg3),\r\n        filters = _parseFilterArgs3[0],\r\n        options = _parseFilterArgs3[1];\r\n\r\n    var queryCache = this.queryCache;\r\n\r\n    var refetchFilters = _extends({}, filters, {\r\n      active: true\r\n    });\r\n\r\n    return notifyManager.batch(function () {\r\n      queryCache.findAll(filters).forEach(function (query) {\r\n        query.reset();\r\n      });\r\n      return _this3.refetchQueries(refetchFilters, options);\r\n    });\r\n  };\r\n\r\n  _proto.cancelQueries = function cancelQueries(arg1, arg2, arg3) {\r\n    var _this4 = this;\r\n\r\n    var _parseFilterArgs4 = parseFilterArgs(arg1, arg2, arg3),\r\n        filters = _parseFilterArgs4[0],\r\n        _parseFilterArgs4$ = _parseFilterArgs4[1],\r\n        cancelOptions = _parseFilterArgs4$ === void 0 ? {} : _parseFilterArgs4$;\r\n\r\n    if (typeof cancelOptions.revert === 'undefined') {\r\n      cancelOptions.revert = true;\r\n    }\r\n\r\n    var promises = notifyManager.batch(function () {\r\n      return _this4.queryCache.findAll(filters).map(function (query) {\r\n        return query.cancel(cancelOptions);\r\n      });\r\n    });\r\n    return Promise.all(promises).then(noop).catch(noop);\r\n  };\r\n\r\n  _proto.invalidateQueries = function invalidateQueries(arg1, arg2, arg3) {\r\n    var _ref2,\r\n        _filters$refetchActiv,\r\n        _filters$refetchInact,\r\n        _this5 = this;\r\n\r\n    var _parseFilterArgs5 = parseFilterArgs(arg1, arg2, arg3),\r\n        filters = _parseFilterArgs5[0],\r\n        options = _parseFilterArgs5[1];\r\n\r\n    var refetchFilters = _extends({}, filters, {\r\n      // if filters.refetchActive is not provided and filters.active is explicitly false,\r\n      // e.g. invalidateQueries({ active: false }), we don't want to refetch active queries\r\n      active: (_ref2 = (_filters$refetchActiv = filters.refetchActive) != null ? _filters$refetchActiv : filters.active) != null ? _ref2 : true,\r\n      inactive: (_filters$refetchInact = filters.refetchInactive) != null ? _filters$refetchInact : false\r\n    });\r\n\r\n    return notifyManager.batch(function () {\r\n      _this5.queryCache.findAll(filters).forEach(function (query) {\r\n        query.invalidate();\r\n      });\r\n\r\n      return _this5.refetchQueries(refetchFilters, options);\r\n    });\r\n  };\r\n\r\n  _proto.refetchQueries = function refetchQueries(arg1, arg2, arg3) {\r\n    var _this6 = this;\r\n\r\n    var _parseFilterArgs6 = parseFilterArgs(arg1, arg2, arg3),\r\n        filters = _parseFilterArgs6[0],\r\n        options = _parseFilterArgs6[1];\r\n\r\n    var promises = notifyManager.batch(function () {\r\n      return _this6.queryCache.findAll(filters).map(function (query) {\r\n        return query.fetch();\r\n      });\r\n    });\r\n    var promise = Promise.all(promises).then(noop);\r\n\r\n    if (!(options == null ? void 0 : options.throwOnError)) {\r\n      promise = promise.catch(noop);\r\n    }\r\n\r\n    return promise;\r\n  };\r\n\r\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\r\n    var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\r\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\r\n\r\n    if (typeof defaultedOptions.retry === 'undefined') {\r\n      defaultedOptions.retry = false;\r\n    }\r\n\r\n    var query = this.queryCache.build(this, defaultedOptions);\r\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\r\n  };\r\n\r\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3) {\r\n    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);\r\n  };\r\n\r\n  _proto.fetchInfiniteQuery = function fetchInfiniteQuery(arg1, arg2, arg3) {\r\n    var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\r\n    parsedOptions.behavior = infiniteQueryBehavior();\r\n    return this.fetchQuery(parsedOptions);\r\n  };\r\n\r\n  _proto.prefetchInfiniteQuery = function prefetchInfiniteQuery(arg1, arg2, arg3) {\r\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);\r\n  };\r\n\r\n  _proto.cancelMutations = function cancelMutations() {\r\n    var _this7 = this;\r\n\r\n    var promises = notifyManager.batch(function () {\r\n      return _this7.mutationCache.getAll().map(function (mutation) {\r\n        return mutation.cancel();\r\n      });\r\n    });\r\n    return Promise.all(promises).then(noop).catch(noop);\r\n  };\r\n\r\n  _proto.resumePausedMutations = function resumePausedMutations() {\r\n    return this.getMutationCache().resumePausedMutations();\r\n  };\r\n\r\n  _proto.executeMutation = function executeMutation(options) {\r\n    return this.mutationCache.build(this, options).execute();\r\n  };\r\n\r\n  _proto.getQueryCache = function getQueryCache() {\r\n    return this.queryCache;\r\n  };\r\n\r\n  _proto.getMutationCache = function getMutationCache() {\r\n    return this.mutationCache;\r\n  };\r\n\r\n  _proto.getDefaultOptions = function getDefaultOptions() {\r\n    return this.defaultOptions;\r\n  };\r\n\r\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\r\n    this.defaultOptions = options;\r\n  };\r\n\r\n  _proto.setQueryDefaults = function setQueryDefaults(queryKey, options) {\r\n    var result = this.queryDefaults.find(function (x) {\r\n      return hashQueryKey(queryKey) === hashQueryKey(x.queryKey);\r\n    });\r\n\r\n    if (result) {\r\n      result.defaultOptions = options;\r\n    } else {\r\n      this.queryDefaults.push({\r\n        queryKey: queryKey,\r\n        defaultOptions: options\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.getQueryDefaults = function getQueryDefaults(queryKey) {\r\n    var _this$queryDefaults$f;\r\n\r\n    return queryKey ? (_this$queryDefaults$f = this.queryDefaults.find(function (x) {\r\n      return partialMatchKey(queryKey, x.queryKey);\r\n    })) == null ? void 0 : _this$queryDefaults$f.defaultOptions : undefined;\r\n  };\r\n\r\n  _proto.setMutationDefaults = function setMutationDefaults(mutationKey, options) {\r\n    var result = this.mutationDefaults.find(function (x) {\r\n      return hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey);\r\n    });\r\n\r\n    if (result) {\r\n      result.defaultOptions = options;\r\n    } else {\r\n      this.mutationDefaults.push({\r\n        mutationKey: mutationKey,\r\n        defaultOptions: options\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.getMutationDefaults = function getMutationDefaults(mutationKey) {\r\n    var _this$mutationDefault;\r\n\r\n    return mutationKey ? (_this$mutationDefault = this.mutationDefaults.find(function (x) {\r\n      return partialMatchKey(mutationKey, x.mutationKey);\r\n    })) == null ? void 0 : _this$mutationDefault.defaultOptions : undefined;\r\n  };\r\n\r\n  _proto.defaultQueryOptions = function defaultQueryOptions(options) {\r\n    if (options == null ? void 0 : options._defaulted) {\r\n      return options;\r\n    }\r\n\r\n    var defaultedOptions = _extends({}, this.defaultOptions.queries, this.getQueryDefaults(options == null ? void 0 : options.queryKey), options, {\r\n      _defaulted: true\r\n    });\r\n\r\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\r\n      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);\r\n    }\r\n\r\n    return defaultedOptions;\r\n  };\r\n\r\n  _proto.defaultQueryObserverOptions = function defaultQueryObserverOptions(options) {\r\n    return this.defaultQueryOptions(options);\r\n  };\r\n\r\n  _proto.defaultMutationOptions = function defaultMutationOptions(options) {\r\n    if (options == null ? void 0 : options._defaulted) {\r\n      return options;\r\n    }\r\n\r\n    return _extends({}, this.defaultOptions.mutations, this.getMutationDefaults(options == null ? void 0 : options.mutationKey), options, {\r\n      _defaulted: true\r\n    });\r\n  };\r\n\r\n  _proto.clear = function clear() {\r\n    this.queryCache.clear();\r\n    this.mutationCache.clear();\r\n  };\r\n\r\n  return QueryClient;\r\n}();", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\r\nimport { notifyManager } from './notifyManager';\r\nimport { focusManager } from './focusManager';\r\nimport { Subscribable } from './subscribable';\r\nimport { getLogger } from './logger';\r\nimport { isCancelledError } from './retryer';\r\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\r\n  _inheritsLoose(QueryObserver, _Subscribable);\r\n\r\n  function QueryObserver(client, options) {\r\n    var _this;\r\n\r\n    _this = _Subscribable.call(this) || this;\r\n    _this.client = client;\r\n    _this.options = options;\r\n    _this.trackedProps = [];\r\n    _this.previousSelectError = null;\r\n\r\n    _this.bindMethods();\r\n\r\n    _this.setOptions(options);\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = QueryObserver.prototype;\r\n\r\n  _proto.bindMethods = function bindMethods() {\r\n    this.remove = this.remove.bind(this);\r\n    this.refetch = this.refetch.bind(this);\r\n  };\r\n\r\n  _proto.onSubscribe = function onSubscribe() {\r\n    if (this.listeners.length === 1) {\r\n      this.currentQuery.addObserver(this);\r\n\r\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\r\n        this.executeFetch();\r\n      }\r\n\r\n      this.updateTimers();\r\n    }\r\n  };\r\n\r\n  _proto.onUnsubscribe = function onUnsubscribe() {\r\n    if (!this.listeners.length) {\r\n      this.destroy();\r\n    }\r\n  };\r\n\r\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\r\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\r\n  };\r\n\r\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\r\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\r\n  };\r\n\r\n  _proto.destroy = function destroy() {\r\n    this.listeners = [];\r\n    this.clearTimers();\r\n    this.currentQuery.removeObserver(this);\r\n  };\r\n\r\n  _proto.setOptions = function setOptions(options, notifyOptions) {\r\n    var prevOptions = this.options;\r\n    var prevQuery = this.currentQuery;\r\n    this.options = this.client.defaultQueryObserverOptions(options);\r\n\r\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\r\n      throw new Error('Expected enabled to be a boolean');\r\n    } // Keep previous query key if the user does not supply one\r\n\r\n\r\n    if (!this.options.queryKey) {\r\n      this.options.queryKey = prevOptions.queryKey;\r\n    }\r\n\r\n    this.updateQuery();\r\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\r\n\r\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\r\n      this.executeFetch();\r\n    } // Update result\r\n\r\n\r\n    this.updateResult(notifyOptions); // Update stale interval if needed\r\n\r\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\r\n      this.updateStaleTimeout();\r\n    } // Update refetch interval if needed\r\n\r\n\r\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\r\n      this.updateRefetchInterval();\r\n    }\r\n  };\r\n\r\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\r\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\r\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\r\n    return this.createResult(query, defaultedOptions);\r\n  };\r\n\r\n  _proto.getCurrentResult = function getCurrentResult() {\r\n    return this.currentResult;\r\n  };\r\n\r\n  _proto.trackResult = function trackResult(result) {\r\n    var _this2 = this;\r\n\r\n    var trackedResult = {};\r\n    Object.keys(result).forEach(function (key) {\r\n      Object.defineProperty(trackedResult, key, {\r\n        configurable: false,\r\n        enumerable: true,\r\n        get: function get() {\r\n          var typedKey = key;\r\n\r\n          if (!_this2.trackedProps.includes(typedKey)) {\r\n            _this2.trackedProps.push(typedKey);\r\n          }\r\n\r\n          return result[typedKey];\r\n        }\r\n      });\r\n    });\r\n    return trackedResult;\r\n  };\r\n\r\n  _proto.getNextResult = function getNextResult(options) {\r\n    var _this3 = this;\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      var unsubscribe = _this3.subscribe(function (result) {\r\n        if (!result.isFetching) {\r\n          unsubscribe();\r\n\r\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\r\n            reject(result.error);\r\n          } else {\r\n            resolve(result);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.getCurrentQuery = function getCurrentQuery() {\r\n    return this.currentQuery;\r\n  };\r\n\r\n  _proto.remove = function remove() {\r\n    this.client.getQueryCache().remove(this.currentQuery);\r\n  };\r\n\r\n  _proto.refetch = function refetch(options) {\r\n    return this.fetch(options);\r\n  };\r\n\r\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\r\n    var _this4 = this;\r\n\r\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\r\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\r\n    return query.fetch().then(function () {\r\n      return _this4.createResult(query, defaultedOptions);\r\n    });\r\n  };\r\n\r\n  _proto.fetch = function fetch(fetchOptions) {\r\n    var _this5 = this;\r\n\r\n    return this.executeFetch(fetchOptions).then(function () {\r\n      _this5.updateResult();\r\n\r\n      return _this5.currentResult;\r\n    });\r\n  };\r\n\r\n  _proto.executeFetch = function executeFetch(fetchOptions) {\r\n    // Make sure we reference the latest query as the current one might have been removed\r\n    this.updateQuery(); // Fetch\r\n\r\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\r\n\r\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\r\n      promise = promise.catch(noop);\r\n    }\r\n\r\n    return promise;\r\n  };\r\n\r\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\r\n    var _this6 = this;\r\n\r\n    this.clearStaleTimeout();\r\n\r\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\r\n      return;\r\n    }\r\n\r\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\r\n    // To mitigate this issue we always add 1 ms to the timeout.\r\n\r\n    var timeout = time + 1;\r\n    this.staleTimeoutId = setTimeout(function () {\r\n      if (!_this6.currentResult.isStale) {\r\n        _this6.updateResult();\r\n      }\r\n    }, timeout);\r\n  };\r\n\r\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\r\n    var _this7 = this;\r\n\r\n    this.clearRefetchInterval();\r\n\r\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\r\n      return;\r\n    }\r\n\r\n    this.refetchIntervalId = setInterval(function () {\r\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\r\n        _this7.executeFetch();\r\n      }\r\n    }, this.options.refetchInterval);\r\n  };\r\n\r\n  _proto.updateTimers = function updateTimers() {\r\n    this.updateStaleTimeout();\r\n    this.updateRefetchInterval();\r\n  };\r\n\r\n  _proto.clearTimers = function clearTimers() {\r\n    this.clearStaleTimeout();\r\n    this.clearRefetchInterval();\r\n  };\r\n\r\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\r\n    clearTimeout(this.staleTimeoutId);\r\n    this.staleTimeoutId = undefined;\r\n  };\r\n\r\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\r\n    clearInterval(this.refetchIntervalId);\r\n    this.refetchIntervalId = undefined;\r\n  };\r\n\r\n  _proto.createResult = function createResult(query, options) {\r\n    var prevQuery = this.currentQuery;\r\n    var prevOptions = this.options;\r\n    var prevResult = this.currentResult;\r\n    var prevResultState = this.currentResultState;\r\n    var prevResultOptions = this.currentResultOptions;\r\n    var queryChange = query !== prevQuery;\r\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\r\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\r\n    var state = query.state;\r\n    var dataUpdatedAt = state.dataUpdatedAt,\r\n        error = state.error,\r\n        errorUpdatedAt = state.errorUpdatedAt,\r\n        isFetching = state.isFetching,\r\n        status = state.status;\r\n    var isPreviousData = false;\r\n    var isPlaceholderData = false;\r\n    var data; // Optimistically set result in fetching state if needed\r\n\r\n    if (options.optimisticResults) {\r\n      var mounted = this.hasListeners();\r\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\r\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\r\n\r\n      if (fetchOnMount || fetchOptionally) {\r\n        isFetching = true;\r\n\r\n        if (!dataUpdatedAt) {\r\n          status = 'loading';\r\n        }\r\n      }\r\n    } // Keep previous data if needed\r\n\r\n\r\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\r\n      data = prevQueryResult.data;\r\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\r\n      status = prevQueryResult.status;\r\n      isPreviousData = true;\r\n    } // Select data if needed\r\n    else if (options.select && typeof state.data !== 'undefined') {\r\n        // Memoize select result\r\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\r\n          data = prevResult.data;\r\n        } else {\r\n          try {\r\n            data = options.select(state.data);\r\n\r\n            if (options.structuralSharing !== false) {\r\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\r\n            }\r\n\r\n            this.previousSelectError = null;\r\n          } catch (selectError) {\r\n            getLogger().error(selectError);\r\n            error = selectError;\r\n            this.previousSelectError = selectError;\r\n            errorUpdatedAt = Date.now();\r\n            status = 'error';\r\n          }\r\n        }\r\n      } // Use query data\r\n      else {\r\n          data = state.data;\r\n        } // Show placeholder data if needed\r\n\r\n\r\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\r\n      var placeholderData; // Memoize placeholder data\r\n\r\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\r\n        placeholderData = prevResult.data;\r\n      } else {\r\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\r\n\r\n        if (options.select && typeof placeholderData !== 'undefined') {\r\n          try {\r\n            placeholderData = options.select(placeholderData);\r\n\r\n            if (options.structuralSharing !== false) {\r\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\r\n            }\r\n\r\n            this.previousSelectError = null;\r\n          } catch (selectError) {\r\n            getLogger().error(selectError);\r\n            error = selectError;\r\n            this.previousSelectError = selectError;\r\n            errorUpdatedAt = Date.now();\r\n            status = 'error';\r\n          }\r\n        }\r\n      }\r\n\r\n      if (typeof placeholderData !== 'undefined') {\r\n        status = 'success';\r\n        data = placeholderData;\r\n        isPlaceholderData = true;\r\n      }\r\n    }\r\n\r\n    var result = {\r\n      status: status,\r\n      isLoading: status === 'loading',\r\n      isSuccess: status === 'success',\r\n      isError: status === 'error',\r\n      isIdle: status === 'idle',\r\n      data: data,\r\n      dataUpdatedAt: dataUpdatedAt,\r\n      error: error,\r\n      errorUpdatedAt: errorUpdatedAt,\r\n      failureCount: state.fetchFailureCount,\r\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\r\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\r\n      isFetching: isFetching,\r\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\r\n      isPlaceholderData: isPlaceholderData,\r\n      isPreviousData: isPreviousData,\r\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\r\n      isStale: isStale(query, options),\r\n      refetch: this.refetch,\r\n      remove: this.remove\r\n    };\r\n    return result;\r\n  };\r\n\r\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\r\n    if (!prevResult) {\r\n      return true;\r\n    }\r\n\r\n    if (result === prevResult) {\r\n      return false;\r\n    }\r\n\r\n    var _this$options = this.options,\r\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\r\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\r\n\r\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\r\n      return true;\r\n    }\r\n\r\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\r\n      return true;\r\n    }\r\n\r\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\r\n    return Object.keys(result).some(function (key) {\r\n      var typedKey = key;\r\n      var changed = result[typedKey] !== prevResult[typedKey];\r\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\r\n        return x === key;\r\n      });\r\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\r\n        return x === key;\r\n      });\r\n      return changed && !isExcluded && (!includedProps || isIncluded);\r\n    });\r\n  };\r\n\r\n  _proto.updateResult = function updateResult(notifyOptions) {\r\n    var prevResult = this.currentResult;\r\n    this.currentResult = this.createResult(this.currentQuery, this.options);\r\n    this.currentResultState = this.currentQuery.state;\r\n    this.currentResultOptions = this.options; // Only notify if something has changed\r\n\r\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\r\n      return;\r\n    } // Determine which callbacks to trigger\r\n\r\n\r\n    var defaultNotifyOptions = {\r\n      cache: true\r\n    };\r\n\r\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\r\n      defaultNotifyOptions.listeners = true;\r\n    }\r\n\r\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\r\n  };\r\n\r\n  _proto.updateQuery = function updateQuery() {\r\n    var query = this.client.getQueryCache().build(this.client, this.options);\r\n\r\n    if (query === this.currentQuery) {\r\n      return;\r\n    }\r\n\r\n    var prevQuery = this.currentQuery;\r\n    this.currentQuery = query;\r\n    this.currentQueryInitialState = query.state;\r\n    this.previousQueryResult = this.currentResult;\r\n\r\n    if (this.hasListeners()) {\r\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\r\n      query.addObserver(this);\r\n    }\r\n  };\r\n\r\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\r\n    var notifyOptions = {};\r\n\r\n    if (action.type === 'success') {\r\n      notifyOptions.onSuccess = true;\r\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\r\n      notifyOptions.onError = true;\r\n    }\r\n\r\n    this.updateResult(notifyOptions);\r\n\r\n    if (this.hasListeners()) {\r\n      this.updateTimers();\r\n    }\r\n  };\r\n\r\n  _proto.notify = function notify(notifyOptions) {\r\n    var _this8 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      // First trigger the configuration callbacks\r\n      if (notifyOptions.onSuccess) {\r\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\r\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\r\n      } else if (notifyOptions.onError) {\r\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\r\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\r\n      } // Then trigger the listeners\r\n\r\n\r\n      if (notifyOptions.listeners) {\r\n        _this8.listeners.forEach(function (listener) {\r\n          listener(_this8.currentResult);\r\n        });\r\n      } // Then the cache listeners\r\n\r\n\r\n      if (notifyOptions.cache) {\r\n        _this8.client.getQueryCache().notify({\r\n          query: _this8.currentQuery,\r\n          type: 'observerResultsUpdated'\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return QueryObserver;\r\n}(Subscribable);\r\n\r\nfunction shouldLoadOnMount(query, options) {\r\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\r\n}\r\n\r\nfunction shouldRefetchOnMount(query, options) {\r\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\r\n}\r\n\r\nfunction shouldFetchOnMount(query, options) {\r\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\r\n}\r\n\r\nfunction _shouldFetchOnReconnect(query, options) {\r\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\r\n}\r\n\r\nfunction _shouldFetchOnWindowFocus(query, options) {\r\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\r\n}\r\n\r\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\r\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\r\n}\r\n\r\nfunction isStale(query, options) {\r\n  return query.isStaleByTime(options.staleTime);\r\n}", "import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport { difference, replaceAt } from './utils';\r\nimport { notifyManager } from './notifyManager';\r\nimport { QueryObserver } from './queryObserver';\r\nimport { Subscribable } from './subscribable';\r\nexport var QueriesObserver = /*#__PURE__*/function (_Subscribable) {\r\n  _inheritsLoose(QueriesObserver, _Subscribable);\r\n\r\n  function QueriesObserver(client, queries) {\r\n    var _this;\r\n\r\n    _this = _Subscribable.call(this) || this;\r\n    _this.client = client;\r\n    _this.queries = [];\r\n    _this.result = [];\r\n    _this.observers = [];\r\n    _this.observersMap = {};\r\n\r\n    if (queries) {\r\n      _this.setQueries(queries);\r\n    }\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = QueriesObserver.prototype;\r\n\r\n  _proto.onSubscribe = function onSubscribe() {\r\n    var _this2 = this;\r\n\r\n    if (this.listeners.length === 1) {\r\n      this.observers.forEach(function (observer) {\r\n        observer.subscribe(function (result) {\r\n          _this2.onUpdate(observer, result);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.onUnsubscribe = function onUnsubscribe() {\r\n    if (!this.listeners.length) {\r\n      this.destroy();\r\n    }\r\n  };\r\n\r\n  _proto.destroy = function destroy() {\r\n    this.listeners = [];\r\n    this.observers.forEach(function (observer) {\r\n      observer.destroy();\r\n    });\r\n  };\r\n\r\n  _proto.setQueries = function setQueries(queries, notifyOptions) {\r\n    this.queries = queries;\r\n    this.updateObservers(notifyOptions);\r\n  };\r\n\r\n  _proto.getCurrentResult = function getCurrentResult() {\r\n    return this.result;\r\n  };\r\n\r\n  _proto.getOptimisticResult = function getOptimisticResult(queries) {\r\n    var _this3 = this;\r\n\r\n    return queries.map(function (options) {\r\n      var defaultedOptions = _this3.client.defaultQueryObserverOptions(options);\r\n\r\n      return _this3.getObserver(defaultedOptions).getOptimisticResult(defaultedOptions);\r\n    });\r\n  };\r\n\r\n  _proto.getObserver = function getObserver(options) {\r\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\r\n    return this.observersMap[defaultedOptions.queryHash] || new QueryObserver(this.client, defaultedOptions);\r\n  };\r\n\r\n  _proto.updateObservers = function updateObservers(notifyOptions) {\r\n    var _this4 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      var hasIndexChange = false;\r\n      var prevObservers = _this4.observers;\r\n      var prevOberversMap = _this4.observersMap;\r\n      var newResult = [];\r\n      var newObservers = [];\r\n      var newObserversMap = {};\r\n\r\n      _this4.queries.forEach(function (options, i) {\r\n        var defaultedOptions = _this4.client.defaultQueryObserverOptions(options);\r\n\r\n        var queryHash = defaultedOptions.queryHash;\r\n\r\n        var observer = _this4.getObserver(defaultedOptions);\r\n\r\n        if (prevOberversMap[queryHash]) {\r\n          observer.setOptions(defaultedOptions, notifyOptions);\r\n        }\r\n\r\n        if (observer !== prevObservers[i]) {\r\n          hasIndexChange = true;\r\n        }\r\n\r\n        newObservers.push(observer);\r\n        newResult.push(observer.getCurrentResult());\r\n        newObserversMap[queryHash] = observer;\r\n      });\r\n\r\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\r\n        return;\r\n      }\r\n\r\n      _this4.observers = newObservers;\r\n      _this4.observersMap = newObserversMap;\r\n      _this4.result = newResult;\r\n\r\n      if (!_this4.hasListeners()) {\r\n        return;\r\n      }\r\n\r\n      difference(prevObservers, newObservers).forEach(function (observer) {\r\n        observer.destroy();\r\n      });\r\n      difference(newObservers, prevObservers).forEach(function (observer) {\r\n        observer.subscribe(function (result) {\r\n          _this4.onUpdate(observer, result);\r\n        });\r\n      });\r\n\r\n      _this4.notify();\r\n    });\r\n  };\r\n\r\n  _proto.onUpdate = function onUpdate(observer, result) {\r\n    var index = this.observers.indexOf(observer);\r\n\r\n    if (index !== -1) {\r\n      this.result = replaceAt(this.result, index, result);\r\n      this.notify();\r\n    }\r\n  };\r\n\r\n  _proto.notify = function notify() {\r\n    var _this5 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      _this5.listeners.forEach(function (listener) {\r\n        listener(_this5.result);\r\n      });\r\n    });\r\n  };\r\n\r\n  return QueriesObserver;\r\n}(Subscribable);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport { QueryObserver } from './queryObserver';\r\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\r\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\r\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver);\r\n\r\n  // Type override\r\n  // Type override\r\n  // Type override\r\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\r\n  function InfiniteQueryObserver(client, options) {\r\n    return _QueryObserver.call(this, client, options) || this;\r\n  }\r\n\r\n  var _proto = InfiniteQueryObserver.prototype;\r\n\r\n  _proto.bindMethods = function bindMethods() {\r\n    _QueryObserver.prototype.bindMethods.call(this);\r\n\r\n    this.fetchNextPage = this.fetchNextPage.bind(this);\r\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\r\n  };\r\n\r\n  _proto.setOptions = function setOptions(options) {\r\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\r\n      behavior: infiniteQueryBehavior()\r\n    }));\r\n  };\r\n\r\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\r\n    options.behavior = infiniteQueryBehavior();\r\n    return _QueryObserver.prototype.getOptimisticResult.call(this, options);\r\n  };\r\n\r\n  _proto.fetchNextPage = function fetchNextPage(options) {\r\n    return this.fetch({\r\n      cancelRefetch: true,\r\n      throwOnError: options == null ? void 0 : options.throwOnError,\r\n      meta: {\r\n        fetchMore: {\r\n          direction: 'forward',\r\n          pageParam: options == null ? void 0 : options.pageParam\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\r\n    return this.fetch({\r\n      cancelRefetch: true,\r\n      throwOnError: options == null ? void 0 : options.throwOnError,\r\n      meta: {\r\n        fetchMore: {\r\n          direction: 'backward',\r\n          pageParam: options == null ? void 0 : options.pageParam\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  _proto.createResult = function createResult(query, options) {\r\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\r\n\r\n    var state = query.state;\r\n\r\n    var result = _QueryObserver.prototype.createResult.call(this, query, options);\r\n\r\n    return _extends({}, result, {\r\n      fetchNextPage: this.fetchNextPage,\r\n      fetchPreviousPage: this.fetchPreviousPage,\r\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\r\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\r\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\r\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\r\n    });\r\n  };\r\n\r\n  return InfiniteQueryObserver;\r\n}(QueryObserver);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport { getDefaultState } from './mutation';\r\nimport { notifyManager } from './notifyManager';\r\nimport { Subscribable } from './subscribable';\r\n// CLASS\r\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\r\n  _inheritsLoose(MutationObserver, _Subscribable);\r\n\r\n  function MutationObserver(client, options) {\r\n    var _this;\r\n\r\n    _this = _Subscribable.call(this) || this;\r\n    _this.client = client;\r\n\r\n    _this.setOptions(options);\r\n\r\n    _this.bindMethods();\r\n\r\n    _this.updateResult();\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = MutationObserver.prototype;\r\n\r\n  _proto.bindMethods = function bindMethods() {\r\n    this.mutate = this.mutate.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  };\r\n\r\n  _proto.setOptions = function setOptions(options) {\r\n    this.options = this.client.defaultMutationOptions(options);\r\n  };\r\n\r\n  _proto.onUnsubscribe = function onUnsubscribe() {\r\n    if (!this.listeners.length) {\r\n      var _this$currentMutation;\r\n\r\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\r\n    }\r\n  };\r\n\r\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\r\n    this.updateResult(); // Determine which callbacks to trigger\r\n\r\n    var notifyOptions = {\r\n      listeners: true\r\n    };\r\n\r\n    if (action.type === 'success') {\r\n      notifyOptions.onSuccess = true;\r\n    } else if (action.type === 'error') {\r\n      notifyOptions.onError = true;\r\n    }\r\n\r\n    this.notify(notifyOptions);\r\n  };\r\n\r\n  _proto.getCurrentResult = function getCurrentResult() {\r\n    return this.currentResult;\r\n  };\r\n\r\n  _proto.reset = function reset() {\r\n    this.currentMutation = undefined;\r\n    this.updateResult();\r\n    this.notify({\r\n      listeners: true\r\n    });\r\n  };\r\n\r\n  _proto.mutate = function mutate(variables, options) {\r\n    this.mutateOptions = options;\r\n\r\n    if (this.currentMutation) {\r\n      this.currentMutation.removeObserver(this);\r\n    }\r\n\r\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\r\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\r\n    }));\r\n    this.currentMutation.addObserver(this);\r\n    return this.currentMutation.execute();\r\n  };\r\n\r\n  _proto.updateResult = function updateResult() {\r\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\r\n    this.currentResult = _extends({}, state, {\r\n      isLoading: state.status === 'loading',\r\n      isSuccess: state.status === 'success',\r\n      isError: state.status === 'error',\r\n      isIdle: state.status === 'idle',\r\n      mutate: this.mutate,\r\n      reset: this.reset\r\n    });\r\n  };\r\n\r\n  _proto.notify = function notify(options) {\r\n    var _this2 = this;\r\n\r\n    notifyManager.batch(function () {\r\n      // First trigger the mutate callbacks\r\n      if (_this2.mutateOptions) {\r\n        if (options.onSuccess) {\r\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\r\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\r\n        } else if (options.onError) {\r\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\r\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\r\n        }\r\n      } // Then trigger the listeners\r\n\r\n\r\n      if (options.listeners) {\r\n        _this2.listeners.forEach(function (listener) {\r\n          listener(_this2.currentResult);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return MutationObserver;\r\n}(Subscribable);", "", "export { CancelledError } from './retryer';\r\nexport { QueryCache } from './queryCache';\r\nexport { QueryClient } from './queryClient';\r\nexport { QueryObserver } from './queryObserver';\r\nexport { QueriesObserver } from './queriesObserver';\r\nexport { InfiniteQueryObserver } from './infiniteQueryObserver';\r\nexport { MutationCache } from './mutationCache';\r\nexport { MutationObserver } from './mutationObserver';\r\nexport { setLogger } from './logger';\r\nexport { notifyManager } from './notifyManager';\r\nexport { focusManager } from './focusManager';\r\nexport { onlineManager } from './onlineManager';\r\nexport { hashQueryKey, isError } from './utils';\r\nexport { isCancelledError } from './retryer'; // Types\r\n\r\nexport * from './types';", "import React from 'react';\r\nvar defaultContext = /*#__PURE__*/React.createContext(undefined);\r\nvar QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // if contextSharing is on, we share the first and at least one\r\n// instance of the context across the window\r\n// to ensure that if React Query is used across\r\n// different bundles or microfrontends they will\r\n// all use the same **instance** of context, regardless\r\n// of module scoping.\r\n\r\nfunction getQueryClientContext(contextSharing) {\r\n  if (contextSharing && typeof window !== 'undefined') {\r\n    if (!window.ReactQueryClientContext) {\r\n      window.ReactQueryClientContext = defaultContext;\r\n    }\r\n\r\n    return window.ReactQueryClientContext;\r\n  }\r\n\r\n  return defaultContext;\r\n}\r\n\r\nexport var useQueryClient = function useQueryClient() {\r\n  var queryClient = React.useContext(getQueryClientContext(React.useContext(QueryClientSharingContext)));\r\n\r\n  if (!queryClient) {\r\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\r\n  }\r\n\r\n  return queryClient;\r\n};\r\nexport var QueryClientProvider = function QueryClientProvider(_ref) {\r\n  var client = _ref.client,\r\n      _ref$contextSharing = _ref.contextSharing,\r\n      contextSharing = _ref$contextSharing === void 0 ? false : _ref$contextSharing,\r\n      children = _ref.children;\r\n  React.useEffect(function () {\r\n    client.mount();\r\n    return function () {\r\n      client.unmount();\r\n    };\r\n  }, [client]);\r\n  var Context = getQueryClientContext(contextSharing);\r\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\r\n    value: contextSharing\r\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\r\n    value: client\r\n  }, children));\r\n};", "import React from 'react'; // CONTEXT\r\n\r\nfunction createValue() {\r\n  var _isReset = false;\r\n  return {\r\n    clearReset: function clearReset() {\r\n      _isReset = false;\r\n    },\r\n    reset: function reset() {\r\n      _isReset = true;\r\n    },\r\n    isReset: function isReset() {\r\n      return _isReset;\r\n    }\r\n  };\r\n}\r\n\r\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\r\n\r\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\r\n  return React.useContext(QueryErrorResetBoundaryContext);\r\n}; // COMPONENT\r\n\r\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\r\n  var children = _ref.children;\r\n  var value = React.useMemo(function () {\r\n    return createValue();\r\n  }, []);\r\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\r\n    value: value\r\n  }, typeof children === 'function' ? children(value) : children);\r\n};", "import React from 'react';\r\nimport { notifyManager } from '../core/notifyManager';\r\nimport { parseFilterArgs } from '../core/utils';\r\nimport { useQueryClient } from './QueryClientProvider';\r\nexport function useIsFetching(arg1, arg2) {\r\n  var mountedRef = React.useRef(false);\r\n  var queryClient = useQueryClient();\r\n\r\n  var _parseFilterArgs = parseFilterArgs(arg1, arg2),\r\n      filters = _parseFilterArgs[0];\r\n\r\n  var _React$useState = React.useState(queryClient.isFetching(filters)),\r\n      isFetching = _React$useState[0],\r\n      setIsFetching = _React$useState[1];\r\n\r\n  var filtersRef = React.useRef(filters);\r\n  filtersRef.current = filters;\r\n  var isFetchingRef = React.useRef(isFetching);\r\n  isFetchingRef.current = isFetching;\r\n  React.useEffect(function () {\r\n    mountedRef.current = true;\r\n    var unsubscribe = queryClient.getQueryCache().subscribe(notifyManager.batchCalls(function () {\r\n      if (mountedRef.current) {\r\n        var newIsFetching = queryClient.isFetching(filtersRef.current);\r\n\r\n        if (isFetchingRef.current !== newIsFetching) {\r\n          setIsFetching(newIsFetching);\r\n        }\r\n      }\r\n    }));\r\n    return function () {\r\n      mountedRef.current = false;\r\n      unsubscribe();\r\n    };\r\n  }, [queryClient]);\r\n  return isFetching;\r\n}", "import React from 'react';\r\nimport { notifyManager } from '../core/notifyManager';\r\nimport { useQueryClient } from './QueryClientProvider';\r\nexport function useIsMutating(filters) {\r\n  var mountedRef = React.useRef(false);\r\n  var queryClient = useQueryClient();\r\n\r\n  var _React$useState = React.useState(queryClient.isMutating(filters)),\r\n      isMutating = _React$useState[0],\r\n      setIsMutating = _React$useState[1];\r\n\r\n  var filtersRef = React.useRef(filters);\r\n  filtersRef.current = filters;\r\n  var isMutatingRef = React.useRef(isMutating);\r\n  isMutatingRef.current = isMutating;\r\n  React.useEffect(function () {\r\n    mountedRef.current = true;\r\n    var unsubscribe = queryClient.getMutationCache().subscribe(notifyManager.batchCalls(function () {\r\n      if (mountedRef.current) {\r\n        var newIsMutating = queryClient.isMutating(filtersRef.current);\r\n\r\n        if (isMutatingRef.current !== newIsMutating) {\r\n          setIsMutating(newIsMutating);\r\n        }\r\n      }\r\n    }));\r\n    return function () {\r\n      mountedRef.current = false;\r\n      unsubscribe();\r\n    };\r\n  }, [queryClient]);\r\n  return isMutating;\r\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport React from 'react';\r\nimport { notifyManager } from '../core/notifyManager';\r\nimport { noop, parseMutationArgs } from '../core/utils';\r\nimport { MutationObserver } from '../core/mutationObserver';\r\nimport { useQueryClient } from './QueryClientProvider';\r\nexport function useMutation(arg1, arg2, arg3) {\r\n  var mountedRef = React.useRef(false);\r\n\r\n  var _React$useState = React.useState(0),\r\n      forceUpdate = _React$useState[1];\r\n\r\n  var options = parseMutationArgs(arg1, arg2, arg3);\r\n  var queryClient = useQueryClient();\r\n  var obsRef = React.useRef();\r\n\r\n  if (!obsRef.current) {\r\n    obsRef.current = new MutationObserver(queryClient, options);\r\n  } else {\r\n    obsRef.current.setOptions(options);\r\n  }\r\n\r\n  var currentResult = obsRef.current.getCurrentResult();\r\n  React.useEffect(function () {\r\n    mountedRef.current = true;\r\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\r\n      if (mountedRef.current) {\r\n        forceUpdate(function (x) {\r\n          return x + 1;\r\n        });\r\n      }\r\n    }));\r\n    return function () {\r\n      mountedRef.current = false;\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n  var mutate = React.useCallback(function (variables, mutateOptions) {\r\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\r\n  }, []);\r\n\r\n  if (currentResult.error && obsRef.current.options.useErrorBoundary) {\r\n    throw currentResult.error;\r\n  }\r\n\r\n  return _extends({}, currentResult, {\r\n    mutate: mutate,\r\n    mutateAsync: currentResult.mutate\r\n  });\r\n}", "import React from 'react';\r\nimport { notifyManager } from '../core/notifyManager';\r\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\r\nimport { useQueryClient } from './QueryClientProvider';\r\nexport function useBaseQuery(options, Observer) {\r\n  var mountedRef = React.useRef(false);\r\n\r\n  var _React$useState = React.useState(0),\r\n      forceUpdate = _React$useState[1];\r\n\r\n  var queryClient = useQueryClient();\r\n  var errorResetBoundary = useQueryErrorResetBoundary();\r\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\r\n\r\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\r\n\r\n  if (defaultedOptions.onError) {\r\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\r\n  }\r\n\r\n  if (defaultedOptions.onSuccess) {\r\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\r\n  }\r\n\r\n  if (defaultedOptions.onSettled) {\r\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\r\n  }\r\n\r\n  if (defaultedOptions.suspense) {\r\n    // Always set stale time when using suspense to prevent\r\n    // fetching again when directly mounting after suspending\r\n    if (typeof defaultedOptions.staleTime !== 'number') {\r\n      defaultedOptions.staleTime = 1000;\r\n    }\r\n  }\r\n\r\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\r\n    // Prevent retrying failed query if the error boundary has not been reset yet\r\n    if (!errorResetBoundary.isReset()) {\r\n      defaultedOptions.retryOnMount = false;\r\n    }\r\n  }\r\n\r\n  var _React$useState2 = React.useState(function () {\r\n    return new Observer(queryClient, defaultedOptions);\r\n  }),\r\n      observer = _React$useState2[0];\r\n\r\n  var result = observer.getOptimisticResult(defaultedOptions);\r\n  React.useEffect(function () {\r\n    mountedRef.current = true;\r\n    errorResetBoundary.clearReset();\r\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\r\n      if (mountedRef.current) {\r\n        forceUpdate(function (x) {\r\n          return x + 1;\r\n        });\r\n      }\r\n    })); // Update result to make sure we did not miss any query updates\r\n    // between creating the observer and subscribing to it.\r\n\r\n    observer.updateResult();\r\n    return function () {\r\n      mountedRef.current = false;\r\n      unsubscribe();\r\n    };\r\n  }, [errorResetBoundary, observer]);\r\n  React.useEffect(function () {\r\n    // Do not notify on updates because of changes in the options because\r\n    // these changes should already be reflected in the optimistic result.\r\n    observer.setOptions(defaultedOptions, {\r\n      listeners: false\r\n    });\r\n  }, [defaultedOptions, observer]); // Handle suspense\r\n\r\n  if (defaultedOptions.suspense && result.isLoading) {\r\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\r\n      var data = _ref.data;\r\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\r\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\r\n    }).catch(function (error) {\r\n      errorResetBoundary.clearReset();\r\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\r\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\r\n    });\r\n  } // Handle error boundary\r\n\r\n\r\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\r\n    throw result.error;\r\n  } // Handle result property usage tracking\r\n\r\n\r\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\r\n    result = observer.trackResult(result);\r\n  }\r\n\r\n  return result;\r\n}", "import { QueryObserver } from '../core';\r\nimport { parseQueryArgs } from '../core/utils';\r\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\r\n\r\nexport function useQuery(arg1, arg2, arg3) {\r\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\r\n  return useBaseQuery(parsedOptions, QueryObserver);\r\n}", "import React from 'react';\r\nimport { notifyManager } from '../core/notifyManager';\r\nimport { QueriesObserver } from '../core/queriesObserver';\r\nimport { useQueryClient } from './QueryClientProvider';\r\nexport function useQueries(queries) {\r\n  var mountedRef = React.useRef(false);\r\n\r\n  var _React$useState = React.useState(0),\r\n      forceUpdate = _React$useState[1];\r\n\r\n  var queryClient = useQueryClient();\r\n  var defaultedQueries = queries.map(function (options) {\r\n    var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure the results are already in fetching state before subscribing or updating options\r\n\r\n    defaultedOptions.optimisticResults = true;\r\n    return defaultedOptions;\r\n  });\r\n\r\n  var _React$useState2 = React.useState(function () {\r\n    return new QueriesObserver(queryClient, defaultedQueries);\r\n  }),\r\n      observer = _React$useState2[0];\r\n\r\n  var result = observer.getOptimisticResult(defaultedQueries);\r\n  React.useEffect(function () {\r\n    mountedRef.current = true;\r\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\r\n      if (mountedRef.current) {\r\n        forceUpdate(function (x) {\r\n          return x + 1;\r\n        });\r\n      }\r\n    }));\r\n    return function () {\r\n      mountedRef.current = false;\r\n      unsubscribe();\r\n    };\r\n  }, [observer]);\r\n  React.useEffect(function () {\r\n    // Do not notify on updates because of changes in the options because\r\n    // these changes should already be reflected in the optimistic result.\r\n    observer.setQueries(defaultedQueries, {\r\n      listeners: false\r\n    });\r\n  }, [defaultedQueries, observer]);\r\n  return result;\r\n}", "import { InfiniteQueryObserver } from '../core/infiniteQueryObserver';\r\nimport { parseQueryArgs } from '../core/utils';\r\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\r\n\r\nexport function useInfiniteQuery(arg1, arg2, arg3) {\r\n  var options = parseQueryArgs(arg1, arg2, arg3);\r\n  return useBaseQuery(options, InfiniteQueryObserver);\r\n}", "import ReactDOM from 'react-dom';\r\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;", "import { notifyManager } from '../core';\r\nimport { unstable_batchedUpdates } from './reactBatchedUpdates';\r\nnotifyManager.setBatchNotifyFunction(unstable_batchedUpdates);", "export var logger = console;", "import { setLogger } from '../core';\r\nimport { logger } from './logger';\r\n\r\nif (logger) {\r\n  setLogger(logger);\r\n}", "", "// Side effects\r\nimport './setBatchUpdatesFn';\r\nimport './setLogger';\r\nexport { QueryClientProvider, useQueryClient } from './QueryClientProvider';\r\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\r\nexport { useIsFetching } from './useIsFetching';\r\nexport { useIsMutating } from './useIsMutating';\r\nexport { useMutation } from './useMutation';\r\nexport { useQuery } from './useQuery';\r\nexport { useQueries } from './useQueries';\r\nexport { useInfiniteQuery } from './useInfiniteQuery'; // Types\r\n\r\nexport * from './types';", "export * from './core';\r\nexport * from './react';"],
  "mappings": "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",
  "names": []
}
